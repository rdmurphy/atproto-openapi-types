{
  "openapi": "3.1.0",
  "info": {
    "title": "AT Protocol XRPC API",
    "summary": "An unofficial conversion of AT Protocol's lexicons to OpenAPI's schema format.",
    "version": "0.0.0",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "https://bsky.social/xrpc/",
      "description": "AT Protocol XRPC server"
    }
  ],
  "paths": {
    "/app.bsky.actor.getPreferences": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get private preferences attached to the account.",
        "operationId": "app.bsky.actor.getPreferences",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "preferences"
                  ],
                  "properties": {
                    "preferences": {
                      "$ref": "#/components/schemas/app.bsky.actor.defs.preferences"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.actor.getProfile": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "operationId": "app.bsky.actor.getProfile",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app.bsky.actor.defs.profileViewDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.actor.getProfiles": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "operationId": "app.bsky.actor.getProfiles",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actors",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "at-identifier"
              },
              "maxItems": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "profiles"
                  ],
                  "properties": {
                    "profiles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileViewDetailed"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.actor.getSuggestions": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get a list of actors suggested for following. Used in discovery UIs.",
        "operationId": "app.bsky.actor.getSuggestions",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actors"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "actors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.actor.putPreferences": {
      "post": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Sets the private preferences attached to the account.",
        "operationId": "app.bsky.actor.putPreferences",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "preferences"
                ],
                "properties": {
                  "preferences": {
                    "$ref": "#/components/schemas/app.bsky.actor.defs.preferences"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.actor.searchActors": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Find actors matching search criteria.",
        "operationId": "app.bsky.actor.searchActors",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actors"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "actors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.actor.searchActorsTypeahead": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Find actor suggestions for a search term.",
        "operationId": "app.bsky.actor.searchActorsTypeahead",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actors"
                  ],
                  "properties": {
                    "actors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileViewBasic"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.feed.describeFeedGenerator": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Returns information about a given feed generator including TOS & offered feed URIs",
        "operationId": "app.bsky.feed.describeFeedGenerator",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "did",
                    "feeds"
                  ],
                  "properties": {
                    "did": {
                      "type": "string",
                      "format": "did"
                    },
                    "feeds": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.describeFeedGenerator.feed"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/app.bsky.feed.describeFeedGenerator.links"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/app.bsky.feed.getActorFeeds": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Retrieve a list of feeds created by a given actor",
        "operationId": "app.bsky.feed.getActorFeeds",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feeds"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feeds": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.generatorView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.feed.getAuthorFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "A view of an actor's feed.",
        "operationId": "app.bsky.feed.getAuthorFeed",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feed"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feed": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.feedViewPost"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.feed.getFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Compose and hydrate a feed from a user's selected feed generator",
        "operationId": "app.bsky.feed.getFeed",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "feed",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feed"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feed": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.feedViewPost"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.feed.getFeedGenerator": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get information about a specific feed offered by a feed generator, such as its online status",
        "operationId": "app.bsky.feed.getFeedGenerator",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "feed",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "view",
                    "isOnline",
                    "isValid"
                  ],
                  "properties": {
                    "view": {
                      "$ref": "#/components/schemas/app.bsky.feed.defs.generatorView"
                    },
                    "isOnline": {
                      "type": "boolean"
                    },
                    "isValid": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.feed.getFeedGenerators": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get information about a list of feed generators",
        "operationId": "app.bsky.feed.getFeedGenerators",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "feeds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "at-uri"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feeds"
                  ],
                  "properties": {
                    "feeds": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.generatorView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.feed.getFeedSkeleton": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "A skeleton of a feed provided by a feed generator",
        "operationId": "app.bsky.feed.getFeedSkeleton",
        "parameters": [
          {
            "name": "feed",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feed"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feed": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.skeletonFeedPost"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/app.bsky.feed.getLikes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "operationId": "app.bsky.feed.getLikes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "cid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "cid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "uri",
                    "likes"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string",
                      "format": "at-uri"
                    },
                    "cid": {
                      "type": "string",
                      "format": "cid"
                    },
                    "cursor": {
                      "type": "string"
                    },
                    "likes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.getLikes.like"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.feed.getPostThread": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "operationId": "app.bsky.feed.getPostThread",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1000,
              "default": 6
            }
          },
          {
            "name": "parentHeight",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1000,
              "default": 80
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "thread"
                  ],
                  "properties": {
                    "thread": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/app.bsky.feed.defs.threadViewPost"
                        },
                        {
                          "$ref": "#/components/schemas/app.bsky.feed.defs.notFoundPost"
                        },
                        {
                          "$ref": "#/components/schemas/app.bsky.feed.defs.blockedPost"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.feed.getPosts": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "A view of an actor's feed.",
        "operationId": "app.bsky.feed.getPosts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "uris",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "at-uri"
              },
              "maxItems": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "posts"
                  ],
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.postView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.feed.getRepostedBy": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "operationId": "app.bsky.feed.getRepostedBy",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "cid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "cid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "uri",
                    "repostedBy"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string",
                      "format": "at-uri"
                    },
                    "cid": {
                      "type": "string",
                      "format": "cid"
                    },
                    "cursor": {
                      "type": "string"
                    },
                    "repostedBy": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.feed.getTimeline": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "A view of the user's home timeline.",
        "operationId": "app.bsky.feed.getTimeline",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "algorithm",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feed"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feed": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.feedViewPost"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.graph.getBlocks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Who is the requester's account blocking?",
        "operationId": "app.bsky.graph.getBlocks",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "blocks"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "blocks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.graph.getFollowers": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Who is following an actor?",
        "operationId": "app.bsky.graph.getFollowers",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "subject",
                    "followers"
                  ],
                  "properties": {
                    "subject": {
                      "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                    },
                    "cursor": {
                      "type": "string"
                    },
                    "followers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.graph.getFollows": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Who is an actor following?",
        "operationId": "app.bsky.graph.getFollows",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "subject",
                    "follows"
                  ],
                  "properties": {
                    "subject": {
                      "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                    },
                    "cursor": {
                      "type": "string"
                    },
                    "follows": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.graph.getList": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Fetch a list of actors",
        "operationId": "app.bsky.graph.getList",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "list",
                    "items"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "list": {
                      "$ref": "#/components/schemas/app.bsky.graph.defs.listView"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.graph.defs.listItemView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.graph.getListMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Which lists is the requester's account muting?",
        "operationId": "app.bsky.graph.getListMutes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "lists"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "lists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.graph.defs.listView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.graph.getLists": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Fetch a list of lists that belong to an actor",
        "operationId": "app.bsky.graph.getLists",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "lists"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "lists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.graph.defs.listView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.graph.getMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Who does the viewer mute?",
        "operationId": "app.bsky.graph.getMutes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "mutes"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "mutes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.graph.muteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute an actor by did or handle.",
        "operationId": "app.bsky.graph.muteActor",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "actor"
                ],
                "properties": {
                  "actor": {
                    "type": "string",
                    "format": "at-identifier"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.graph.muteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute a list of actors.",
        "operationId": "app.bsky.graph.muteActorList",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "list"
                ],
                "properties": {
                  "list": {
                    "type": "string",
                    "format": "at-uri"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.graph.unmuteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute an actor by did or handle.",
        "operationId": "app.bsky.graph.unmuteActor",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "actor"
                ],
                "properties": {
                  "actor": {
                    "type": "string",
                    "format": "at-identifier"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.graph.unmuteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute a list of actors.",
        "operationId": "app.bsky.graph.unmuteActorList",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "list"
                ],
                "properties": {
                  "list": {
                    "type": "string",
                    "format": "at-uri"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.notification.getUnreadCount": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "operationId": "app.bsky.notification.getUnreadCount",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "seenAt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.notification.listNotifications": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "operationId": "app.bsky.notification.listNotifications",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seenAt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "notifications"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "notifications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.notification.listNotifications.notification"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.notification.updateSeen": {
      "post": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Notify server that the user has seen notifications.",
        "operationId": "app.bsky.notification.updateSeen",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "seenAt"
                ],
                "properties": {
                  "seenAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.unspecced.getPopular": {
      "get": {
        "tags": [
          "app.bsky.unspecced"
        ],
        "summary": "An unspecced view of globally popular items",
        "operationId": "app.bsky.unspecced.getPopular",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "includeNsfw",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feed"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feed": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.feedViewPost"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/app.bsky.unspecced.getPopularFeedGenerators": {
      "get": {
        "tags": [
          "app.bsky.unspecced"
        ],
        "summary": "An unspecced view of globally popular feed generators",
        "operationId": "app.bsky.unspecced.getPopularFeedGenerators",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feeds"
                  ],
                  "properties": {
                    "feeds": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.generatorView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.disableAccountInvites": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Disable an account from receiving new invite codes, but does not invalidate existing codes",
        "operationId": "com.atproto.admin.disableAccountInvites",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account"
                ],
                "properties": {
                  "account": {
                    "type": "string",
                    "format": "did"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.disableInviteCodes": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Disable some set of codes and/or all codes associated with a set of users",
        "operationId": "com.atproto.admin.disableInviteCodes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "codes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "accounts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.enableAccountInvites": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Re-enable an accounts ability to receive invite codes",
        "operationId": "com.atproto.admin.enableAccountInvites",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account"
                ],
                "properties": {
                  "account": {
                    "type": "string",
                    "format": "did"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.getInviteCodes": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Admin view of invite codes",
        "operationId": "com.atproto.admin.getInviteCodes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "recent",
                "usage"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 100
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "codes"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "codes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.server.defs.inviteCode"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.getModerationAction": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "View details about a moderation action.",
        "operationId": "com.atproto.admin.getModerationAction",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.actionViewDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.getModerationActions": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "List moderation actions related to a subject.",
        "operationId": "com.atproto.admin.getModerationActions",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actions"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "actions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.actionView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.getModerationReport": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "View details about a moderation report.",
        "operationId": "com.atproto.admin.getModerationReport",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.reportViewDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.getModerationReports": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "List moderation reports related to a subject.",
        "operationId": "com.atproto.admin.getModerationReports",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resolved",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "actionType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "com.atproto.admin.defs#takedown",
                "com.atproto.admin.defs#flag",
                "com.atproto.admin.defs#acknowledge",
                "com.atproto.admin.defs#escalate"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "reports"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "reports": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.reportView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.getRecord": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "View details about a record.",
        "operationId": "com.atproto.admin.getRecord",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "cid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.recordViewDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.getRepo": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "View details about a repository.",
        "operationId": "com.atproto.admin.getRepo",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "did"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.repoViewDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.resolveModerationReports": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Resolve moderation reports by an action.",
        "operationId": "com.atproto.admin.resolveModerationReports",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "actionId",
                  "reportIds",
                  "createdBy"
                ],
                "properties": {
                  "actionId": {
                    "type": "integer"
                  },
                  "reportIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "createdBy": {
                    "type": "string",
                    "format": "did"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.actionView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.reverseModerationAction": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Reverse a moderation action.",
        "operationId": "com.atproto.admin.reverseModerationAction",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "reason",
                  "createdBy"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string",
                    "format": "did"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.actionView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.searchRepos": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Find repositories based on a search term.",
        "operationId": "com.atproto.admin.searchRepos",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invitedBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "repos"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "repos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.repoView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.takeModerationAction": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Take a moderation action on a repo.",
        "operationId": "com.atproto.admin.takeModerationAction",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "action",
                  "subject",
                  "reason",
                  "createdBy"
                ],
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "com.atproto.admin.defs#takedown",
                      "com.atproto.admin.defs#flag",
                      "com.atproto.admin.defs#acknowledge"
                    ]
                  },
                  "subject": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.repo.strongRef"
                      }
                    ]
                  },
                  "subjectBlobCids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "cid"
                    }
                  },
                  "createLabelVals": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "negateLabelVals": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "reason": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string",
                    "format": "did"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.actionView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.updateAccountEmail": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Administrative action to update an account's email",
        "operationId": "com.atproto.admin.updateAccountEmail",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account",
                  "email"
                ],
                "properties": {
                  "account": {
                    "type": "string",
                    "description": "The handle or DID of the repo.",
                    "format": "at-identifier"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.admin.updateAccountHandle": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Administrative action to update an account's handle",
        "operationId": "com.atproto.admin.updateAccountHandle",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "did",
                  "handle"
                ],
                "properties": {
                  "did": {
                    "type": "string",
                    "format": "did"
                  },
                  "handle": {
                    "type": "string",
                    "format": "handle"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.identity.resolveHandle": {
      "get": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Provides the DID of a repo.",
        "operationId": "com.atproto.identity.resolveHandle",
        "parameters": [
          {
            "name": "handle",
            "in": "query",
            "description": "The handle to resolve.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The handle to resolve.",
              "format": "handle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "did"
                  ],
                  "properties": {
                    "did": {
                      "type": "string",
                      "format": "did"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.identity.updateHandle": {
      "post": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Updates the handle of the account",
        "operationId": "com.atproto.identity.updateHandle",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "handle"
                ],
                "properties": {
                  "handle": {
                    "type": "string",
                    "format": "handle"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.label.queryLabels": {
      "get": {
        "tags": [
          "com.atproto.label"
        ],
        "summary": "Find labels relevant to the provided URI patterns.",
        "operationId": "com.atproto.label.queryLabels",
        "parameters": [
          {
            "name": "uriPatterns",
            "in": "query",
            "description": "List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sources",
            "in": "query",
            "description": "Optional list of label sources (DIDs) to filter on",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "did"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 250,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "labels"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "labels": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.label.defs.label"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.moderation.createReport": {
      "post": {
        "tags": [
          "com.atproto.moderation"
        ],
        "summary": "Report a repo or a record.",
        "operationId": "com.atproto.moderation.createReport",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reasonType",
                  "subject"
                ],
                "properties": {
                  "reasonType": {
                    "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonType"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "subject": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.repo.strongRef"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "reasonType",
                    "subject",
                    "reportedBy",
                    "createdAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "reasonType": {
                      "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonType"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "subject": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
                        },
                        {
                          "$ref": "#/components/schemas/com.atproto.repo.strongRef"
                        }
                      ]
                    },
                    "reportedBy": {
                      "type": "string",
                      "format": "did"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.repo.applyWrites": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Apply a batch transaction of creates, updates, and deletes.",
        "operationId": "com.atproto.repo.applyWrites",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "repo",
                  "writes"
                ],
                "properties": {
                  "repo": {
                    "type": "string",
                    "description": "The handle or DID of the repo.",
                    "format": "at-identifier"
                  },
                  "validate": {
                    "type": "boolean",
                    "description": "Validate the records?",
                    "default": true
                  },
                  "writes": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/com.atproto.repo.applyWrites.create"
                        },
                        {
                          "$ref": "#/components/schemas/com.atproto.repo.applyWrites.update"
                        },
                        {
                          "$ref": "#/components/schemas/com.atproto.repo.applyWrites.delete"
                        }
                      ]
                    }
                  },
                  "swapCommit": {
                    "type": "string",
                    "format": "cid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.repo.createRecord": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Create a new record.",
        "operationId": "com.atproto.repo.createRecord",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "repo",
                  "collection",
                  "record"
                ],
                "properties": {
                  "repo": {
                    "type": "string",
                    "description": "The handle or DID of the repo.",
                    "format": "at-identifier"
                  },
                  "collection": {
                    "type": "string",
                    "description": "The NSID of the record collection.",
                    "format": "nsid"
                  },
                  "rkey": {
                    "type": "string",
                    "description": "The key of the record.",
                    "maxLength": 15
                  },
                  "validate": {
                    "type": "boolean",
                    "description": "Validate the record?",
                    "default": true
                  },
                  "record": {},
                  "swapCommit": {
                    "type": "string",
                    "description": "Compare and swap with the previous commit by cid.",
                    "format": "cid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "uri",
                    "cid"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string",
                      "format": "at-uri"
                    },
                    "cid": {
                      "type": "string",
                      "format": "cid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.repo.deleteRecord": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Delete a record, or ensure it doesn't exist.",
        "operationId": "com.atproto.repo.deleteRecord",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "repo",
                  "collection",
                  "rkey"
                ],
                "properties": {
                  "repo": {
                    "type": "string",
                    "description": "The handle or DID of the repo.",
                    "format": "at-identifier"
                  },
                  "collection": {
                    "type": "string",
                    "description": "The NSID of the record collection.",
                    "format": "nsid"
                  },
                  "rkey": {
                    "type": "string",
                    "description": "The key of the record."
                  },
                  "swapRecord": {
                    "type": "string",
                    "description": "Compare and swap with the previous record by cid.",
                    "format": "cid"
                  },
                  "swapCommit": {
                    "type": "string",
                    "description": "Compare and swap with the previous commit by cid.",
                    "format": "cid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.repo.describeRepo": {
      "get": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Get information about the repo, including the list of collections.",
        "operationId": "com.atproto.repo.describeRepo",
        "parameters": [
          {
            "name": "repo",
            "in": "query",
            "description": "The handle or DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The handle or DID of the repo.",
              "format": "at-identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "handle",
                    "did",
                    "didDoc",
                    "collections",
                    "handleIsCorrect"
                  ],
                  "properties": {
                    "handle": {
                      "type": "string",
                      "format": "handle"
                    },
                    "did": {
                      "type": "string",
                      "format": "did"
                    },
                    "didDoc": {},
                    "collections": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "nsid"
                      }
                    },
                    "handleIsCorrect": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.repo.getRecord": {
      "get": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Get a record.",
        "operationId": "com.atproto.repo.getRecord",
        "parameters": [
          {
            "name": "repo",
            "in": "query",
            "description": "The handle or DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The handle or DID of the repo.",
              "format": "at-identifier"
            }
          },
          {
            "name": "collection",
            "in": "query",
            "description": "The NSID of the record collection.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The NSID of the record collection.",
              "format": "nsid"
            }
          },
          {
            "name": "rkey",
            "in": "query",
            "description": "The key of the record.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The key of the record."
            }
          },
          {
            "name": "cid",
            "in": "query",
            "description": "The CID of the version of the record. If not specified, then return the most recent version.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The CID of the version of the record. If not specified, then return the most recent version.",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "uri",
                    "value"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string",
                      "format": "at-uri"
                    },
                    "cid": {
                      "type": "string",
                      "format": "cid"
                    },
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.repo.listRecords": {
      "get": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "List a range of records in a collection.",
        "operationId": "com.atproto.repo.listRecords",
        "parameters": [
          {
            "name": "repo",
            "in": "query",
            "description": "The handle or DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The handle or DID of the repo.",
              "format": "at-identifier"
            }
          },
          {
            "name": "collection",
            "in": "query",
            "description": "The NSID of the record type.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The NSID of the record type.",
              "format": "nsid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of records to return.",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rkeyStart",
            "in": "query",
            "description": "DEPRECATED: The lowest sort-ordered rkey to start from (exclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "description": "DEPRECATED: The lowest sort-ordered rkey to start from (exclusive)"
            }
          },
          {
            "name": "rkeyEnd",
            "in": "query",
            "description": "DEPRECATED: The highest sort-ordered rkey to stop at (exclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "description": "DEPRECATED: The highest sort-ordered rkey to stop at (exclusive)"
            }
          },
          {
            "name": "reverse",
            "in": "query",
            "description": "Reverse the order of the returned records?",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Reverse the order of the returned records?"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "records"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "records": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.repo.listRecords.record"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.repo.putRecord": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Write a record, creating or updating it as needed.",
        "operationId": "com.atproto.repo.putRecord",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "repo",
                  "collection",
                  "rkey",
                  "record"
                ],
                "properties": {
                  "repo": {
                    "type": "string",
                    "description": "The handle or DID of the repo.",
                    "format": "at-identifier"
                  },
                  "collection": {
                    "type": "string",
                    "description": "The NSID of the record collection.",
                    "format": "nsid"
                  },
                  "rkey": {
                    "type": "string",
                    "description": "The key of the record.",
                    "maxLength": 15
                  },
                  "validate": {
                    "type": "boolean",
                    "description": "Validate the record?",
                    "default": true
                  },
                  "record": {},
                  "swapRecord": {
                    "type": "string",
                    "description": "Compare and swap with the previous record by cid.",
                    "format": "cid"
                  },
                  "swapCommit": {
                    "type": "string",
                    "description": "Compare and swap with the previous commit by cid.",
                    "format": "cid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "uri",
                    "cid"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string",
                      "format": "at-uri"
                    },
                    "cid": {
                      "type": "string",
                      "format": "cid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.repo.rebaseRepo": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Simple rebase of repo that deletes history",
        "operationId": "com.atproto.repo.rebaseRepo",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "repo"
                ],
                "properties": {
                  "repo": {
                    "type": "string",
                    "description": "The handle or DID of the repo.",
                    "format": "at-identifier"
                  },
                  "swapCommit": {
                    "type": "string",
                    "description": "Compare and swap with the previous commit by cid.",
                    "format": "cid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.repo.uploadBlob": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Upload a new blob to be added to repo in a later request.",
        "operationId": "com.atproto.repo.uploadBlob",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "*/*": {}
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "blob"
                  ],
                  "properties": {
                    "blob": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.server.createAccount": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create an account.",
        "operationId": "com.atproto.server.createAccount",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "handle",
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "handle": {
                    "type": "string",
                    "format": "handle"
                  },
                  "did": {
                    "type": "string",
                    "format": "did"
                  },
                  "inviteCode": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "recoveryKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "accessJwt",
                    "refreshJwt",
                    "handle",
                    "did"
                  ],
                  "properties": {
                    "accessJwt": {
                      "type": "string"
                    },
                    "refreshJwt": {
                      "type": "string"
                    },
                    "handle": {
                      "type": "string",
                      "format": "handle"
                    },
                    "did": {
                      "type": "string",
                      "format": "did"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.server.createAppPassword": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create an app-specific password.",
        "operationId": "com.atproto.server.createAppPassword",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.server.createAppPassword.appPassword"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.server.createInviteCode": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create an invite code.",
        "operationId": "com.atproto.server.createInviteCode",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "useCount"
                ],
                "properties": {
                  "useCount": {
                    "type": "integer"
                  },
                  "forAccount": {
                    "type": "string",
                    "format": "did"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.server.createInviteCodes": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create an invite code.",
        "operationId": "com.atproto.server.createInviteCodes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "codeCount",
                  "useCount"
                ],
                "properties": {
                  "codeCount": {
                    "type": "integer",
                    "default": 1
                  },
                  "useCount": {
                    "type": "integer"
                  },
                  "forAccounts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "did"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "codes"
                  ],
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.server.createInviteCodes.accountCodes"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.server.createSession": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create an authentication session.",
        "operationId": "com.atproto.server.createSession",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "identifier",
                  "password"
                ],
                "properties": {
                  "identifier": {
                    "type": "string",
                    "description": "Handle or other identifier supported by the server for the authenticating user."
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "accessJwt",
                    "refreshJwt",
                    "handle",
                    "did"
                  ],
                  "properties": {
                    "accessJwt": {
                      "type": "string"
                    },
                    "refreshJwt": {
                      "type": "string"
                    },
                    "handle": {
                      "type": "string",
                      "format": "handle"
                    },
                    "did": {
                      "type": "string",
                      "format": "did"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.server.deleteAccount": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Delete a user account with a token and password.",
        "operationId": "com.atproto.server.deleteAccount",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "did",
                  "password",
                  "token"
                ],
                "properties": {
                  "did": {
                    "type": "string",
                    "format": "did"
                  },
                  "password": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.server.deleteSession": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Delete the current session.",
        "operationId": "com.atproto.server.deleteSession",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.server.describeServer": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Get a document describing the service's accounts configuration.",
        "operationId": "com.atproto.server.describeServer",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "availableUserDomains"
                  ],
                  "properties": {
                    "inviteCodeRequired": {
                      "type": "boolean"
                    },
                    "availableUserDomains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/com.atproto.server.describeServer.links"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.server.getAccountInviteCodes": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Get all invite codes for a given account",
        "operationId": "com.atproto.server.getAccountInviteCodes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "includeUsed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "createAvailable",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "codes"
                  ],
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.server.defs.inviteCode"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.server.getSession": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Get information about the current session.",
        "operationId": "com.atproto.server.getSession",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "handle",
                    "did"
                  ],
                  "properties": {
                    "handle": {
                      "type": "string",
                      "format": "handle"
                    },
                    "did": {
                      "type": "string",
                      "format": "did"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.server.listAppPasswords": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "List all app-specific passwords.",
        "operationId": "com.atproto.server.listAppPasswords",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "passwords"
                  ],
                  "properties": {
                    "passwords": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.server.listAppPasswords.appPassword"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.server.refreshSession": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Refresh an authentication session.",
        "operationId": "com.atproto.server.refreshSession",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "accessJwt",
                    "refreshJwt",
                    "handle",
                    "did"
                  ],
                  "properties": {
                    "accessJwt": {
                      "type": "string"
                    },
                    "refreshJwt": {
                      "type": "string"
                    },
                    "handle": {
                      "type": "string",
                      "format": "handle"
                    },
                    "did": {
                      "type": "string",
                      "format": "did"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.server.requestAccountDelete": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Initiate a user account deletion via email.",
        "operationId": "com.atproto.server.requestAccountDelete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.server.requestPasswordReset": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Initiate a user account password reset via email.",
        "operationId": "com.atproto.server.requestPasswordReset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.server.resetPassword": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Reset a user account password using a token.",
        "operationId": "com.atproto.server.resetPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.server.revokeAppPassword": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Revoke an app-specific password by name.",
        "operationId": "com.atproto.server.revokeAppPassword",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/com.atproto.sync.getBlob": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get a blob associated with a given repo.",
        "operationId": "com.atproto.sync.getBlob",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          },
          {
            "name": "cid",
            "in": "query",
            "description": "The CID of the blob to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The CID of the blob to fetch",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {}
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.sync.getBlocks": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Gets blocks from a given repo.",
        "operationId": "com.atproto.sync.getBlocks",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          },
          {
            "name": "cids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "cid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.ipld.car": {}
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.sync.getCheckout": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Gets the repo state.",
        "operationId": "com.atproto.sync.getCheckout",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          },
          {
            "name": "commit",
            "in": "query",
            "description": "The commit to get the checkout from. Defaults to current HEAD.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The commit to get the checkout from. Defaults to current HEAD.",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.ipld.car": {}
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.sync.getCommitPath": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Gets the path of repo commits",
        "operationId": "com.atproto.sync.getCommitPath",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          },
          {
            "name": "latest",
            "in": "query",
            "description": "The most recent commit",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The most recent commit",
              "format": "cid"
            }
          },
          {
            "name": "earliest",
            "in": "query",
            "description": "The earliest commit to start from",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The earliest commit to start from",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "commits"
                  ],
                  "properties": {
                    "commits": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "cid"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.sync.getHead": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Gets the current HEAD CID of a repo.",
        "operationId": "com.atproto.sync.getHead",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "root"
                  ],
                  "properties": {
                    "root": {
                      "type": "string",
                      "format": "cid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.sync.getRecord": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Gets blocks needed for existence or non-existence of record.",
        "operationId": "com.atproto.sync.getRecord",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          },
          {
            "name": "collection",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "nsid"
            }
          },
          {
            "name": "rkey",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commit",
            "in": "query",
            "description": "An optional past commit CID.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "An optional past commit CID.",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.ipld.car": {}
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.sync.getRepo": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Gets the repo state.",
        "operationId": "com.atproto.sync.getRepo",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          },
          {
            "name": "earliest",
            "in": "query",
            "description": "The earliest commit in the commit range (not inclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The earliest commit in the commit range (not inclusive)",
              "format": "cid"
            }
          },
          {
            "name": "latest",
            "in": "query",
            "description": "The latest commit in the commit range (inclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The latest commit in the commit range (inclusive)",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.ipld.car": {}
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.sync.listBlobs": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "List blob cids for some range of commits",
        "operationId": "com.atproto.sync.listBlobs",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          },
          {
            "name": "latest",
            "in": "query",
            "description": "The most recent commit",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The most recent commit",
              "format": "cid"
            }
          },
          {
            "name": "earliest",
            "in": "query",
            "description": "The earliest commit to start from",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The earliest commit to start from",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "cids"
                  ],
                  "properties": {
                    "cids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "cid"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.sync.listRepos": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "List dids and root cids of hosted repos",
        "operationId": "com.atproto.sync.listRepos",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 500
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "repos"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "repos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.sync.listRepos.repo"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.sync.notifyOfUpdate": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Notify a crawling service of a recent update. Often when a long break between updates causes the connection with the crawling service to break.",
        "operationId": "com.atproto.sync.notifyOfUpdate",
        "parameters": [
          {
            "name": "hostname",
            "in": "query",
            "description": "Hostname of the service that is notifying of update.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Hostname of the service that is notifying of update."
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/com.atproto.sync.requestCrawl": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Request a service to persistently crawl hosted repos.",
        "operationId": "com.atproto.sync.requestCrawl",
        "parameters": [
          {
            "name": "hostname",
            "in": "query",
            "description": "Hostname of the service that is requesting to be crawled.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Hostname of the service that is requesting to be crawled."
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "app.bsky.actor.defs.profileViewBasic": {
        "type": "object",
        "required": [
          "did",
          "handle"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "handle": {
            "type": "string",
            "format": "handle"
          },
          "displayName": {
            "type": "string",
            "maxLength": 640
          },
          "avatar": {
            "type": "string"
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.viewerState"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          }
        }
      },
      "app.bsky.actor.defs.profileView": {
        "type": "object",
        "required": [
          "did",
          "handle"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "handle": {
            "type": "string",
            "format": "handle"
          },
          "displayName": {
            "type": "string",
            "maxLength": 640
          },
          "description": {
            "type": "string",
            "maxLength": 2560
          },
          "avatar": {
            "type": "string"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.viewerState"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          }
        }
      },
      "app.bsky.actor.defs.profileViewDetailed": {
        "type": "object",
        "required": [
          "did",
          "handle"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "handle": {
            "type": "string",
            "format": "handle"
          },
          "displayName": {
            "type": "string",
            "maxLength": 640
          },
          "description": {
            "type": "string",
            "maxLength": 2560
          },
          "avatar": {
            "type": "string"
          },
          "banner": {
            "type": "string"
          },
          "followersCount": {
            "type": "integer"
          },
          "followsCount": {
            "type": "integer"
          },
          "postsCount": {
            "type": "integer"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.viewerState"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          }
        }
      },
      "app.bsky.actor.defs.viewerState": {
        "type": "object",
        "properties": {
          "muted": {
            "type": "boolean"
          },
          "mutedByList": {
            "$ref": "#/components/schemas/app.bsky.graph.defs.listViewBasic"
          },
          "blockedBy": {
            "type": "boolean"
          },
          "blocking": {
            "type": "string",
            "format": "at-uri"
          },
          "following": {
            "type": "string",
            "format": "at-uri"
          },
          "followedBy": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.actor.defs.preferences": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/app.bsky.actor.defs.adultContentPref"
            },
            {
              "$ref": "#/components/schemas/app.bsky.actor.defs.contentLabelPref"
            },
            {
              "$ref": "#/components/schemas/app.bsky.actor.defs.savedFeedsPref"
            }
          ]
        }
      },
      "app.bsky.actor.defs.adultContentPref": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "app.bsky.actor.defs.contentLabelPref": {
        "type": "object",
        "required": [
          "label",
          "visibility"
        ],
        "properties": {
          "label": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "show",
              "warn",
              "hide"
            ]
          }
        }
      },
      "app.bsky.actor.defs.savedFeedsPref": {
        "type": "object",
        "required": [
          "pinned",
          "saved"
        ],
        "properties": {
          "pinned": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "at-uri"
            }
          },
          "saved": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "at-uri"
            }
          }
        }
      },
      "app.bsky.actor.profile": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "maxLength": 640
          },
          "description": {
            "type": "string",
            "maxLength": 2560
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "maxLength": 1000000
          },
          "banner": {
            "type": "string",
            "format": "binary",
            "maxLength": 1000000
          }
        }
      },
      "app.bsky.embed.external": {
        "type": "object",
        "required": [
          "external"
        ],
        "properties": {
          "external": {
            "$ref": "#/components/schemas/app.bsky.embed.external.external"
          }
        }
      },
      "app.bsky.embed.external.external": {
        "type": "object",
        "required": [
          "uri",
          "title",
          "description"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "thumb": {
            "type": "string",
            "format": "binary",
            "maxLength": 1000000
          }
        }
      },
      "app.bsky.embed.external.view": {
        "type": "object",
        "required": [
          "external"
        ],
        "properties": {
          "external": {
            "$ref": "#/components/schemas/app.bsky.embed.external.viewExternal"
          }
        }
      },
      "app.bsky.embed.external.viewExternal": {
        "type": "object",
        "required": [
          "uri",
          "title",
          "description"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "thumb": {
            "type": "string"
          }
        }
      },
      "app.bsky.embed.images": {
        "type": "object",
        "required": [
          "images"
        ],
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.embed.images.image"
            },
            "maxItems": 4
          }
        }
      },
      "app.bsky.embed.images.image": {
        "type": "object",
        "required": [
          "image",
          "alt"
        ],
        "properties": {
          "image": {
            "type": "string",
            "format": "binary",
            "maxLength": 1000000
          },
          "alt": {
            "type": "string"
          }
        }
      },
      "app.bsky.embed.images.view": {
        "type": "object",
        "required": [
          "images"
        ],
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.embed.images.viewImage"
            },
            "maxItems": 4
          }
        }
      },
      "app.bsky.embed.images.viewImage": {
        "type": "object",
        "required": [
          "thumb",
          "fullsize",
          "alt"
        ],
        "properties": {
          "thumb": {
            "type": "string"
          },
          "fullsize": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          }
        }
      },
      "app.bsky.embed.record": {
        "type": "object",
        "required": [
          "record"
        ],
        "properties": {
          "record": {
            "$ref": "#/components/schemas/com.atproto.repo.strongRef"
          }
        }
      },
      "app.bsky.embed.record.view": {
        "type": "object",
        "required": [
          "record"
        ],
        "properties": {
          "record": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.embed.record.viewRecord"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.record.viewNotFound"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.record.viewBlocked"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.generatorView"
              }
            ]
          }
        }
      },
      "app.bsky.embed.record.viewRecord": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "author",
          "value",
          "indexedAt"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "author": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileViewBasic"
          },
          "value": {},
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          },
          "embeds": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/app.bsky.embed.images.view"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.embed.external.view"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.embed.record.view"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.embed.recordWithMedia.view"
                }
              ]
            }
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.embed.record.viewNotFound": {
        "type": "object",
        "required": [
          "uri"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.embed.record.viewBlocked": {
        "type": "object",
        "required": [
          "uri"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.embed.recordWithMedia": {
        "type": "object",
        "required": [
          "record",
          "media"
        ],
        "properties": {
          "record": {
            "$ref": "#/components/schemas/app.bsky.embed.record"
          },
          "media": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.embed.images"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.external"
              }
            ]
          }
        }
      },
      "app.bsky.embed.recordWithMedia.view": {
        "type": "object",
        "required": [
          "record",
          "media"
        ],
        "properties": {
          "record": {
            "$ref": "#/components/schemas/app.bsky.embed.record.view"
          },
          "media": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.embed.images.view"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.external.view"
              }
            ]
          }
        }
      },
      "app.bsky.feed.defs.postView": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "author",
          "record",
          "indexedAt"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "author": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileViewBasic"
          },
          "record": {},
          "embed": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.embed.images.view"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.external.view"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.record.view"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.recordWithMedia.view"
              }
            ]
          },
          "replyCount": {
            "type": "integer"
          },
          "repostCount": {
            "type": "integer"
          },
          "likeCount": {
            "type": "integer"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.feed.defs.viewerState"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          }
        }
      },
      "app.bsky.feed.defs.viewerState": {
        "type": "object",
        "properties": {
          "repost": {
            "type": "string",
            "format": "at-uri"
          },
          "like": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.feed.defs.feedViewPost": {
        "type": "object",
        "required": [
          "post"
        ],
        "properties": {
          "post": {
            "$ref": "#/components/schemas/app.bsky.feed.defs.postView"
          },
          "reply": {
            "$ref": "#/components/schemas/app.bsky.feed.defs.replyRef"
          },
          "reason": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.reasonRepost"
              }
            ]
          }
        }
      },
      "app.bsky.feed.defs.replyRef": {
        "type": "object",
        "required": [
          "root",
          "parent"
        ],
        "properties": {
          "root": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.postView"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.notFoundPost"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.blockedPost"
              }
            ]
          },
          "parent": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.postView"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.notFoundPost"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.blockedPost"
              }
            ]
          }
        }
      },
      "app.bsky.feed.defs.reasonRepost": {
        "type": "object",
        "required": [
          "by",
          "indexedAt"
        ],
        "properties": {
          "by": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileViewBasic"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.feed.defs.threadViewPost": {
        "type": "object",
        "required": [
          "post"
        ],
        "properties": {
          "post": {
            "$ref": "#/components/schemas/app.bsky.feed.defs.postView"
          },
          "parent": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.threadViewPost"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.notFoundPost"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.blockedPost"
              }
            ]
          },
          "replies": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/app.bsky.feed.defs.threadViewPost"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.feed.defs.notFoundPost"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.feed.defs.blockedPost"
                }
              ]
            }
          }
        }
      },
      "app.bsky.feed.defs.notFoundPost": {
        "type": "object",
        "required": [
          "uri",
          "notFound"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "notFound": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "app.bsky.feed.defs.blockedPost": {
        "type": "object",
        "required": [
          "uri",
          "blocked"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "blocked": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "app.bsky.feed.defs.generatorView": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "creator",
          "displayName",
          "indexedAt"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "did": {
            "type": "string",
            "format": "did"
          },
          "creator": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "maxLength": 3000
          },
          "descriptionFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.richtext.facet"
            }
          },
          "avatar": {
            "type": "string"
          },
          "likeCount": {
            "type": "integer",
            "minimum": 0
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.feed.defs.generatorViewerState"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.feed.defs.generatorViewerState": {
        "type": "object",
        "properties": {
          "like": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.feed.defs.skeletonFeedPost": {
        "type": "object",
        "required": [
          "post"
        ],
        "properties": {
          "post": {
            "type": "string",
            "format": "at-uri"
          },
          "reason": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.skeletonReasonRepost"
              }
            ]
          }
        }
      },
      "app.bsky.feed.defs.skeletonReasonRepost": {
        "type": "object",
        "required": [
          "repost"
        ],
        "properties": {
          "repost": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.feed.describeFeedGenerator.feed": {
        "type": "object",
        "required": [
          "uri"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.feed.describeFeedGenerator.links": {
        "type": "object",
        "properties": {
          "privacyPolicy": {
            "type": "string"
          },
          "termsOfService": {
            "type": "string"
          }
        }
      },
      "app.bsky.feed.generator": {
        "type": "object",
        "required": [
          "did",
          "displayName",
          "createdAt"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "displayName": {
            "type": "string",
            "maxLength": 240
          },
          "description": {
            "type": "string",
            "maxLength": 3000
          },
          "descriptionFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.richtext.facet"
            }
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "maxLength": 1000000
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.feed.getLikes.like": {
        "type": "object",
        "required": [
          "indexedAt",
          "createdAt",
          "actor"
        ],
        "properties": {
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "actor": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
          }
        }
      },
      "app.bsky.feed.like": {
        "type": "object",
        "required": [
          "subject",
          "createdAt"
        ],
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/com.atproto.repo.strongRef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.feed.post": {
        "type": "object",
        "required": [
          "text",
          "createdAt"
        ],
        "properties": {
          "text": {
            "type": "string",
            "maxLength": 3000
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.feed.post.entity"
            }
          },
          "facets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.richtext.facet"
            }
          },
          "reply": {
            "$ref": "#/components/schemas/app.bsky.feed.post.replyRef"
          },
          "embed": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.embed.images"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.external"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.record"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.recordWithMedia"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.feed.post.replyRef": {
        "type": "object",
        "required": [
          "root",
          "parent"
        ],
        "properties": {
          "root": {
            "$ref": "#/components/schemas/com.atproto.repo.strongRef"
          },
          "parent": {
            "$ref": "#/components/schemas/com.atproto.repo.strongRef"
          }
        }
      },
      "app.bsky.feed.post.entity": {
        "type": "object",
        "description": "Deprecated: use facets instead.",
        "required": [
          "index",
          "type",
          "value"
        ],
        "properties": {
          "index": {
            "$ref": "#/components/schemas/app.bsky.feed.post.textSlice"
          },
          "type": {
            "type": "string",
            "description": "Expected values are 'mention' and 'link'."
          },
          "value": {
            "type": "string"
          }
        }
      },
      "app.bsky.feed.post.textSlice": {
        "type": "object",
        "description": "Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings.",
        "required": [
          "start",
          "end"
        ],
        "properties": {
          "start": {
            "type": "integer",
            "minimum": 0
          },
          "end": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "app.bsky.feed.repost": {
        "type": "object",
        "required": [
          "subject",
          "createdAt"
        ],
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/com.atproto.repo.strongRef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.graph.block": {
        "type": "object",
        "required": [
          "subject",
          "createdAt"
        ],
        "properties": {
          "subject": {
            "type": "string",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.graph.defs.listViewBasic": {
        "type": "object",
        "required": [
          "uri",
          "name",
          "purpose"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "purpose": {
            "$ref": "#/components/schemas/app.bsky.graph.defs.listPurpose"
          },
          "avatar": {
            "type": "string"
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.graph.defs.listViewerState"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.graph.defs.listView": {
        "type": "object",
        "required": [
          "uri",
          "creator",
          "name",
          "purpose",
          "indexedAt"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "creator": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "purpose": {
            "$ref": "#/components/schemas/app.bsky.graph.defs.listPurpose"
          },
          "description": {
            "type": "string",
            "maxLength": 3000
          },
          "descriptionFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.richtext.facet"
            }
          },
          "avatar": {
            "type": "string"
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.graph.defs.listViewerState"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.graph.defs.listItemView": {
        "type": "object",
        "required": [
          "subject"
        ],
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
          }
        }
      },
      "app.bsky.graph.defs.listPurpose": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/app.bsky.graph.defs.modlist"
          }
        ]
      },
      "app.bsky.graph.defs.modlist": {
        "type": "string",
        "format": "token",
        "description": "A list of actors to apply an aggregate moderation action (mute/block) on"
      },
      "app.bsky.graph.defs.listViewerState": {
        "type": "object",
        "properties": {
          "muted": {
            "type": "boolean"
          }
        }
      },
      "app.bsky.graph.follow": {
        "type": "object",
        "required": [
          "subject",
          "createdAt"
        ],
        "properties": {
          "subject": {
            "type": "string",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.graph.list": {
        "type": "object",
        "required": [
          "name",
          "purpose",
          "createdAt"
        ],
        "properties": {
          "purpose": {
            "$ref": "#/components/schemas/app.bsky.graph.defs.listPurpose"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "description": {
            "type": "string",
            "maxLength": 3000
          },
          "descriptionFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.richtext.facet"
            }
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "maxLength": 1000000
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.graph.listitem": {
        "type": "object",
        "required": [
          "subject",
          "list",
          "createdAt"
        ],
        "properties": {
          "subject": {
            "type": "string",
            "format": "did"
          },
          "list": {
            "type": "string",
            "format": "at-uri"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.notification.listNotifications.notification": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "author",
          "reason",
          "record",
          "isRead",
          "indexedAt"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "author": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
          },
          "reason": {
            "type": "string",
            "description": "Expected values are 'like', 'repost', 'follow', 'mention', 'reply', and 'quote'.",
            "enum": [
              "like",
              "repost",
              "follow",
              "mention",
              "reply",
              "quote"
            ]
          },
          "reasonSubject": {
            "type": "string",
            "format": "at-uri"
          },
          "record": {},
          "isRead": {
            "type": "boolean"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          }
        }
      },
      "app.bsky.richtext.facet": {
        "type": "object",
        "required": [
          "index",
          "features"
        ],
        "properties": {
          "index": {
            "$ref": "#/components/schemas/app.bsky.richtext.facet.byteSlice"
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/app.bsky.richtext.facet.mention"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.richtext.facet.link"
                }
              ]
            }
          }
        }
      },
      "app.bsky.richtext.facet.mention": {
        "type": "object",
        "description": "A facet feature for actor mentions.",
        "required": [
          "did"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          }
        }
      },
      "app.bsky.richtext.facet.link": {
        "type": "object",
        "description": "A facet feature for links.",
        "required": [
          "uri"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "app.bsky.richtext.facet.byteSlice": {
        "type": "object",
        "description": "A text segment. Start is inclusive, end is exclusive. Indices are for utf8-encoded strings.",
        "required": [
          "byteStart",
          "byteEnd"
        ],
        "properties": {
          "byteStart": {
            "type": "integer",
            "minimum": 0
          },
          "byteEnd": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "com.atproto.admin.defs.actionView": {
        "type": "object",
        "required": [
          "id",
          "action",
          "subject",
          "subjectBlobCids",
          "reason",
          "createdBy",
          "createdAt",
          "resolvedReportIds"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "action": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.actionType"
          },
          "subject": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
              },
              {
                "$ref": "#/components/schemas/com.atproto.repo.strongRef"
              }
            ]
          },
          "subjectBlobCids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createLabelVals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "negateLabelVals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reason": {
            "type": "string"
          },
          "createdBy": {
            "type": "string",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "reversal": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.actionReversal"
          },
          "resolvedReportIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "com.atproto.admin.defs.actionViewDetail": {
        "type": "object",
        "required": [
          "id",
          "action",
          "subject",
          "subjectBlobs",
          "reason",
          "createdBy",
          "createdAt",
          "resolvedReports"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "action": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.actionType"
          },
          "subject": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.repoView"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.repoViewNotFound"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.recordView"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.recordViewNotFound"
              }
            ]
          },
          "subjectBlobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.admin.defs.blobView"
            }
          },
          "createLabelVals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "negateLabelVals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reason": {
            "type": "string"
          },
          "createdBy": {
            "type": "string",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "reversal": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.actionReversal"
          },
          "resolvedReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.admin.defs.reportView"
            }
          }
        }
      },
      "com.atproto.admin.defs.actionViewCurrent": {
        "type": "object",
        "required": [
          "id",
          "action"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "action": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.actionType"
          }
        }
      },
      "com.atproto.admin.defs.actionReversal": {
        "type": "object",
        "required": [
          "reason",
          "createdBy",
          "createdAt"
        ],
        "properties": {
          "reason": {
            "type": "string"
          },
          "createdBy": {
            "type": "string",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.admin.defs.actionType": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/com.atproto.admin.defs.takedown"
          },
          {
            "$ref": "#/components/schemas/com.atproto.admin.defs.flag"
          },
          {
            "$ref": "#/components/schemas/com.atproto.admin.defs.acknowledge"
          },
          {
            "$ref": "#/components/schemas/com.atproto.admin.defs.escalate"
          }
        ]
      },
      "com.atproto.admin.defs.takedown": {
        "type": "string",
        "format": "token",
        "description": "Moderation action type: Takedown. Indicates that content should not be served by the PDS."
      },
      "com.atproto.admin.defs.flag": {
        "type": "string",
        "format": "token",
        "description": "Moderation action type: Flag. Indicates that the content was reviewed and considered to violate PDS rules, but may still be served."
      },
      "com.atproto.admin.defs.acknowledge": {
        "type": "string",
        "format": "token",
        "description": "Moderation action type: Acknowledge. Indicates that the content was reviewed and not considered to violate PDS rules."
      },
      "com.atproto.admin.defs.escalate": {
        "type": "string",
        "format": "token",
        "description": "Moderation action type: Escalate. Indicates that the content has been flagged for additional review."
      },
      "com.atproto.admin.defs.reportView": {
        "type": "object",
        "required": [
          "id",
          "reasonType",
          "subject",
          "reportedBy",
          "createdAt",
          "resolvedByActionIds"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "reasonType": {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonType"
          },
          "reason": {
            "type": "string"
          },
          "subject": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
              },
              {
                "$ref": "#/components/schemas/com.atproto.repo.strongRef"
              }
            ]
          },
          "reportedBy": {
            "type": "string",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "resolvedByActionIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "com.atproto.admin.defs.reportViewDetail": {
        "type": "object",
        "required": [
          "id",
          "reasonType",
          "subject",
          "reportedBy",
          "createdAt",
          "resolvedByActions"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "reasonType": {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonType"
          },
          "reason": {
            "type": "string"
          },
          "subject": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.repoView"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.repoViewNotFound"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.recordView"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.recordViewNotFound"
              }
            ]
          },
          "reportedBy": {
            "type": "string",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "resolvedByActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.admin.defs.actionView"
            }
          }
        }
      },
      "com.atproto.admin.defs.repoView": {
        "type": "object",
        "required": [
          "did",
          "handle",
          "relatedRecords",
          "indexedAt",
          "moderation"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "handle": {
            "type": "string",
            "format": "handle"
          },
          "email": {
            "type": "string"
          },
          "relatedRecords": {
            "type": "array",
            "items": {}
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "moderation": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.moderation"
          },
          "invitedBy": {
            "$ref": "#/components/schemas/com.atproto.server.defs.inviteCode"
          },
          "invitesDisabled": {
            "type": "boolean"
          }
        }
      },
      "com.atproto.admin.defs.repoViewDetail": {
        "type": "object",
        "required": [
          "did",
          "handle",
          "relatedRecords",
          "indexedAt",
          "moderation"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "handle": {
            "type": "string",
            "format": "handle"
          },
          "email": {
            "type": "string"
          },
          "relatedRecords": {
            "type": "array",
            "items": {}
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "moderation": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.moderationDetail"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          },
          "invitedBy": {
            "$ref": "#/components/schemas/com.atproto.server.defs.inviteCode"
          },
          "invites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.server.defs.inviteCode"
            }
          },
          "invitesDisabled": {
            "type": "boolean"
          }
        }
      },
      "com.atproto.admin.defs.repoViewNotFound": {
        "type": "object",
        "required": [
          "did"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          }
        }
      },
      "com.atproto.admin.defs.repoRef": {
        "type": "object",
        "required": [
          "did"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          }
        }
      },
      "com.atproto.admin.defs.recordView": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "value",
          "blobCids",
          "indexedAt",
          "moderation",
          "repo"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "value": {},
          "blobCids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "cid"
            }
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "moderation": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.moderation"
          },
          "repo": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.repoView"
          }
        }
      },
      "com.atproto.admin.defs.recordViewDetail": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "value",
          "blobs",
          "indexedAt",
          "moderation",
          "repo"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "value": {},
          "blobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.admin.defs.blobView"
            }
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "moderation": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.moderationDetail"
          },
          "repo": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.repoView"
          }
        }
      },
      "com.atproto.admin.defs.recordViewNotFound": {
        "type": "object",
        "required": [
          "uri"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "com.atproto.admin.defs.moderation": {
        "type": "object",
        "required": [],
        "properties": {
          "currentAction": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.actionViewCurrent"
          }
        }
      },
      "com.atproto.admin.defs.moderationDetail": {
        "type": "object",
        "required": [
          "actions",
          "reports"
        ],
        "properties": {
          "currentAction": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.actionViewCurrent"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.admin.defs.actionView"
            }
          },
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.admin.defs.reportView"
            }
          }
        }
      },
      "com.atproto.admin.defs.blobView": {
        "type": "object",
        "required": [
          "cid",
          "mimeType",
          "size",
          "createdAt"
        ],
        "properties": {
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "mimeType": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "details": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.imageDetails"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.videoDetails"
              }
            ]
          },
          "moderation": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.moderation"
          }
        }
      },
      "com.atproto.admin.defs.imageDetails": {
        "type": "object",
        "required": [
          "width",
          "height"
        ],
        "properties": {
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          }
        }
      },
      "com.atproto.admin.defs.videoDetails": {
        "type": "object",
        "required": [
          "width",
          "height",
          "length"
        ],
        "properties": {
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "length": {
            "type": "integer"
          }
        }
      },
      "com.atproto.label.defs.label": {
        "type": "object",
        "description": "Metadata tag on an atproto resource (eg, repo or record)",
        "required": [
          "src",
          "uri",
          "val",
          "cts"
        ],
        "properties": {
          "src": {
            "type": "string",
            "description": "DID of the actor who created this label",
            "format": "did"
          },
          "uri": {
            "type": "string",
            "description": "AT URI of the record, repository (account), or other resource which this label applies to",
            "format": "uri"
          },
          "cid": {
            "type": "string",
            "description": "optionally, CID specifying the specific version of 'uri' resource this label applies to",
            "format": "cid"
          },
          "val": {
            "type": "string",
            "description": "the short string name of the value or type of this label",
            "maxLength": 128
          },
          "neg": {
            "type": "boolean",
            "description": "if true, this is a negation label, overwriting a previous label"
          },
          "cts": {
            "type": "string",
            "description": "timestamp when this label was created",
            "format": "date-time"
          }
        }
      },
      "com.atproto.label.subscribeLabels.labels": {
        "type": "object",
        "required": [
          "seq",
          "labels"
        ],
        "properties": {
          "seq": {
            "type": "integer"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          }
        }
      },
      "com.atproto.label.subscribeLabels.info": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "OutdatedCursor"
            ]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "com.atproto.moderation.defs.reasonType": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonSpam"
          },
          {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonViolation"
          },
          {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonMisleading"
          },
          {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonSexual"
          },
          {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonRude"
          },
          {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonOther"
          }
        ]
      },
      "com.atproto.moderation.defs.reasonSpam": {
        "type": "string",
        "format": "token",
        "description": "Spam: frequent unwanted promotion, replies, mentions"
      },
      "com.atproto.moderation.defs.reasonViolation": {
        "type": "string",
        "format": "token",
        "description": "Direct violation of server rules, laws, terms of service"
      },
      "com.atproto.moderation.defs.reasonMisleading": {
        "type": "string",
        "format": "token",
        "description": "Misleading identity, affiliation, or content"
      },
      "com.atproto.moderation.defs.reasonSexual": {
        "type": "string",
        "format": "token",
        "description": "Unwanted or mis-labeled sexual content"
      },
      "com.atproto.moderation.defs.reasonRude": {
        "type": "string",
        "format": "token",
        "description": "Rude, harassing, explicit, or otherwise unwelcoming behavior"
      },
      "com.atproto.moderation.defs.reasonOther": {
        "type": "string",
        "format": "token",
        "description": "Other: reports not falling under another report category"
      },
      "com.atproto.repo.applyWrites.create": {
        "type": "object",
        "description": "Create a new record.",
        "required": [
          "collection",
          "value"
        ],
        "properties": {
          "collection": {
            "type": "string",
            "format": "nsid"
          },
          "rkey": {
            "type": "string",
            "maxLength": 15
          },
          "value": {}
        }
      },
      "com.atproto.repo.applyWrites.update": {
        "type": "object",
        "description": "Update an existing record.",
        "required": [
          "collection",
          "rkey",
          "value"
        ],
        "properties": {
          "collection": {
            "type": "string",
            "format": "nsid"
          },
          "rkey": {
            "type": "string"
          },
          "value": {}
        }
      },
      "com.atproto.repo.applyWrites.delete": {
        "type": "object",
        "description": "Delete an existing record.",
        "required": [
          "collection",
          "rkey"
        ],
        "properties": {
          "collection": {
            "type": "string",
            "format": "nsid"
          },
          "rkey": {
            "type": "string"
          }
        }
      },
      "com.atproto.repo.listRecords.record": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "value"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "value": {}
        }
      },
      "com.atproto.repo.strongRef": {
        "type": "object",
        "required": [
          "uri",
          "cid"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          }
        }
      },
      "com.atproto.server.createAppPassword.appPassword": {
        "type": "object",
        "required": [
          "name",
          "password",
          "createdAt"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.server.createInviteCodes.accountCodes": {
        "type": "object",
        "required": [
          "account",
          "codes"
        ],
        "properties": {
          "account": {
            "type": "string"
          },
          "codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "com.atproto.server.defs.inviteCode": {
        "type": "object",
        "required": [
          "code",
          "available",
          "disabled",
          "forAccount",
          "createdBy",
          "createdAt",
          "uses"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "available": {
            "type": "integer"
          },
          "disabled": {
            "type": "boolean"
          },
          "forAccount": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "uses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.server.defs.inviteCodeUse"
            }
          }
        }
      },
      "com.atproto.server.defs.inviteCodeUse": {
        "type": "object",
        "required": [
          "usedBy",
          "usedAt"
        ],
        "properties": {
          "usedBy": {
            "type": "string",
            "format": "did"
          },
          "usedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.server.describeServer.links": {
        "type": "object",
        "properties": {
          "privacyPolicy": {
            "type": "string"
          },
          "termsOfService": {
            "type": "string"
          }
        }
      },
      "com.atproto.server.listAppPasswords.appPassword": {
        "type": "object",
        "required": [
          "name",
          "createdAt"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.sync.listRepos.repo": {
        "type": "object",
        "required": [
          "did",
          "head"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "head": {
            "type": "string",
            "format": "cid"
          }
        }
      },
      "com.atproto.sync.subscribeRepos.commit": {
        "type": "object",
        "required": [
          "seq",
          "rebase",
          "tooBig",
          "repo",
          "commit",
          "prev",
          "blocks",
          "ops",
          "blobs",
          "time"
        ],
        "properties": {
          "seq": {
            "type": "integer"
          },
          "rebase": {
            "type": "boolean"
          },
          "tooBig": {
            "type": "boolean"
          },
          "repo": {
            "type": "string",
            "format": "did"
          },
          "commit": {
            "type": "string",
            "format": "cid-link"
          },
          "prev": {
            "type": "string",
            "format": "cid-link"
          },
          "blocks": {
            "type": "string",
            "format": "byte",
            "description": "CAR file containing relevant blocks",
            "maxLength": 1000000
          },
          "ops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.sync.subscribeRepos.repoOp"
            },
            "maxItems": 200
          },
          "blobs": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "cid-link"
            }
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.sync.subscribeRepos.handle": {
        "type": "object",
        "required": [
          "seq",
          "did",
          "handle",
          "time"
        ],
        "properties": {
          "seq": {
            "type": "integer"
          },
          "did": {
            "type": "string",
            "format": "did"
          },
          "handle": {
            "type": "string",
            "format": "handle"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.sync.subscribeRepos.migrate": {
        "type": "object",
        "required": [
          "seq",
          "did",
          "migrateTo",
          "time"
        ],
        "properties": {
          "seq": {
            "type": "integer"
          },
          "did": {
            "type": "string",
            "format": "did"
          },
          "migrateTo": {
            "type": "string"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.sync.subscribeRepos.tombstone": {
        "type": "object",
        "required": [
          "seq",
          "did",
          "time"
        ],
        "properties": {
          "seq": {
            "type": "integer"
          },
          "did": {
            "type": "string",
            "format": "did"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.sync.subscribeRepos.info": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "OutdatedCursor"
            ]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "com.atproto.sync.subscribeRepos.repoOp": {
        "type": "object",
        "required": [
          "action",
          "path",
          "cid"
        ],
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "create",
              "update",
              "delete"
            ]
          },
          "path": {
            "type": "string"
          },
          "cid": {
            "type": "string",
            "format": "cid-link"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "app.bsky.actor"
    },
    {
      "name": "app.bsky.embed"
    },
    {
      "name": "app.bsky.feed"
    },
    {
      "name": "app.bsky.graph"
    },
    {
      "name": "app.bsky.notification"
    },
    {
      "name": "app.bsky.richtext"
    },
    {
      "name": "app.bsky.unspecced"
    },
    {
      "name": "com.atproto.admin"
    },
    {
      "name": "com.atproto.identity"
    },
    {
      "name": "com.atproto.label"
    },
    {
      "name": "com.atproto.moderation"
    },
    {
      "name": "com.atproto.repo"
    },
    {
      "name": "com.atproto.server"
    },
    {
      "name": "com.atproto.sync"
    }
  ]
}
