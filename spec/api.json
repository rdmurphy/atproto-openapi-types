{
  "openapi": "3.1.0",
  "info": {
    "title": "AT Protocol XRPC API",
    "summary": "An unofficial conversion of AT Protocol's lexicons to OpenAPI's schema format.",
    "version": "0.0.0",
    "license": {
      "name": "MIT License",
      "identifier": "MIT"
    }
  },
  "servers": [
    {
      "url": "https://bsky.social/xrpc/",
      "description": "AT Protocol PDS XRPC server"
    },
    {
      "url": "https://api.bsky.app/xrpc/",
      "description": "AT Protocol AppView XRPC server"
    }
  ],
  "paths": {
    "/app.bsky.actor.getPreferences": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get private preferences attached to the account.",
        "operationId": "app.bsky.actor.getPreferences",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "preferences"
                  ],
                  "properties": {
                    "preferences": {
                      "$ref": "#/components/schemas/app.bsky.actor.defs.preferences"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.getProfile": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get detailed profile view of an actor.",
        "operationId": "app.bsky.actor.getProfile",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app.bsky.actor.defs.profileViewDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.getProfiles": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get detailed profile views of multiple actors.",
        "operationId": "app.bsky.actor.getProfiles",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actors",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "at-identifier"
              },
              "maxItems": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "profiles"
                  ],
                  "properties": {
                    "profiles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileViewDetailed"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.getSuggestions": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get a list of suggested actors, used for discovery.",
        "operationId": "app.bsky.actor.getSuggestions",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actors"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "actors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.putPreferences": {
      "post": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Set the private preferences attached to the account.",
        "operationId": "app.bsky.actor.putPreferences",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "preferences"
                ],
                "properties": {
                  "preferences": {
                    "$ref": "#/components/schemas/app.bsky.actor.defs.preferences"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.searchActors": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Find actors (profiles) matching search criteria.",
        "operationId": "app.bsky.actor.searchActors",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "DEPRECATED: use 'q' instead.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "DEPRECATED: use 'q' instead."
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 25
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actors"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "actors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.searchActorsTypeahead": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Find actor suggestions for a prefix search term.",
        "operationId": "app.bsky.actor.searchActorsTypeahead",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "DEPRECATED: use 'q' instead.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "DEPRECATED: use 'q' instead."
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search query prefix; not a full query string.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Search query prefix; not a full query string."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actors"
                  ],
                  "properties": {
                    "actors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileViewBasic"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getActorFeeds": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get a list of feeds created by the actor.",
        "operationId": "app.bsky.feed.getActorFeeds",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feeds"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feeds": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.generatorView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getActorLikes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get a list of posts liked by an actor.",
        "operationId": "app.bsky.feed.getActorLikes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feed"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feed": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.feedViewPost"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "BlockedActor"
                        },
                        {
                          "const": "BlockedByActor"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getAuthorFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get a view of an actor's feed.",
        "operationId": "app.bsky.feed.getAuthorFeed",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "posts_with_replies",
              "enum": [
                "posts_with_replies",
                "posts_no_replies",
                "posts_with_media",
                "posts_and_author_threads"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feed"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feed": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.feedViewPost"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "BlockedActor"
                        },
                        {
                          "const": "BlockedByActor"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get a hydrated feed from an actor's selected feed generator.",
        "operationId": "app.bsky.feed.getFeed",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "feed",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feed"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feed": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.feedViewPost"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "UnknownFeed"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getFeedGenerator": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get information about a feed generator.",
        "operationId": "app.bsky.feed.getFeedGenerator",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "feed",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "view",
                    "isOnline",
                    "isValid"
                  ],
                  "properties": {
                    "view": {
                      "$ref": "#/components/schemas/app.bsky.feed.defs.generatorView"
                    },
                    "isOnline": {
                      "type": "boolean"
                    },
                    "isValid": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getFeedGenerators": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get information about a list of feed generators.",
        "operationId": "app.bsky.feed.getFeedGenerators",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "feeds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "at-uri"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feeds"
                  ],
                  "properties": {
                    "feeds": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.generatorView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getLikes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get the list of likes.",
        "operationId": "app.bsky.feed.getLikes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "cid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "cid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "uri",
                    "likes"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string",
                      "format": "at-uri"
                    },
                    "cid": {
                      "type": "string",
                      "format": "cid"
                    },
                    "cursor": {
                      "type": "string"
                    },
                    "likes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.getLikes.like"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getListFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get a view of a recent posts from actors in a list.",
        "operationId": "app.bsky.feed.getListFeed",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feed"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feed": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.feedViewPost"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "UnknownList"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getPostThread": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get posts in a thread.",
        "operationId": "app.bsky.feed.getPostThread",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1000,
              "default": 6
            }
          },
          {
            "name": "parentHeight",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1000,
              "default": 80
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "thread"
                  ],
                  "properties": {
                    "thread": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/app.bsky.feed.defs.threadViewPost"
                        },
                        {
                          "$ref": "#/components/schemas/app.bsky.feed.defs.notFoundPost"
                        },
                        {
                          "$ref": "#/components/schemas/app.bsky.feed.defs.blockedPost"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "NotFound"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getPosts": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get a view of an actor's feed.",
        "operationId": "app.bsky.feed.getPosts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "uris",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "at-uri"
              },
              "maxItems": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "posts"
                  ],
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.postView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getRepostedBy": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get a list of reposts.",
        "operationId": "app.bsky.feed.getRepostedBy",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "cid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "cid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "uri",
                    "repostedBy"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string",
                      "format": "at-uri"
                    },
                    "cid": {
                      "type": "string",
                      "format": "cid"
                    },
                    "cursor": {
                      "type": "string"
                    },
                    "repostedBy": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getSuggestedFeeds": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get a list of suggested feeds for the viewer.",
        "operationId": "app.bsky.feed.getSuggestedFeeds",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feeds"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feeds": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.generatorView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getTimeline": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get a view of the actor's home timeline.",
        "operationId": "app.bsky.feed.getTimeline",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "algorithm",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feed"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feed": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.feedViewPost"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.searchPosts": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Find posts matching search criteria.",
        "operationId": "app.bsky.feed.searchPosts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 25
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Optional pagination mechanism; may not necessarily allow scrolling through entire result set.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Optional pagination mechanism; may not necessarily allow scrolling through entire result set."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "posts"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "hitsTotal": {
                      "type": "integer"
                    },
                    "posts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.postView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "BadQueryString"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getBlocks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get a list of who the actor is blocking.",
        "operationId": "app.bsky.graph.getBlocks",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "blocks"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "blocks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getFollowers": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get a list of an actor's followers.",
        "operationId": "app.bsky.graph.getFollowers",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "subject",
                    "followers"
                  ],
                  "properties": {
                    "subject": {
                      "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                    },
                    "cursor": {
                      "type": "string"
                    },
                    "followers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getFollows": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get a list of who the actor follows.",
        "operationId": "app.bsky.graph.getFollows",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "subject",
                    "follows"
                  ],
                  "properties": {
                    "subject": {
                      "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                    },
                    "cursor": {
                      "type": "string"
                    },
                    "follows": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getList": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get a list of actors.",
        "operationId": "app.bsky.graph.getList",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "list",
                    "items"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "list": {
                      "$ref": "#/components/schemas/app.bsky.graph.defs.listView"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.graph.defs.listItemView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getListBlocks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get lists that the actor is blocking.",
        "operationId": "app.bsky.graph.getListBlocks",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "lists"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "lists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.graph.defs.listView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getListMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get lists that the actor is muting.",
        "operationId": "app.bsky.graph.getListMutes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "lists"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "lists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.graph.defs.listView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getLists": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get a list of lists that belong to an actor.",
        "operationId": "app.bsky.graph.getLists",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "lists"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "lists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.graph.defs.listView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get a list of who the actor mutes.",
        "operationId": "app.bsky.graph.getMutes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "mutes"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "mutes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getRelationships": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Enumerates public relationships between one account, and a list of other accounts",
        "operationId": "app.bsky.graph.getRelationships",
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          },
          {
            "name": "others",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "at-identifier"
              },
              "maxItems": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "relationships"
                  ],
                  "properties": {
                    "actor": {
                      "type": "string",
                      "format": "did"
                    },
                    "relationships": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/app.bsky.graph.defs.relationship"
                          },
                          {
                            "$ref": "#/components/schemas/app.bsky.graph.defs.notFoundActor"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ActorNotFound"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getSuggestedFollowsByActor": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get suggested follows related to a given actor.",
        "operationId": "app.bsky.graph.getSuggestedFollowsByActor",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "suggestions"
                  ],
                  "properties": {
                    "suggestions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.muteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute an actor by DID or handle.",
        "operationId": "app.bsky.graph.muteActor",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "actor"
                ],
                "properties": {
                  "actor": {
                    "type": "string",
                    "format": "at-identifier"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.muteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute a list of actors.",
        "operationId": "app.bsky.graph.muteActorList",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "list"
                ],
                "properties": {
                  "list": {
                    "type": "string",
                    "format": "at-uri"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.unmuteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute an actor by DID or handle.",
        "operationId": "app.bsky.graph.unmuteActor",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "actor"
                ],
                "properties": {
                  "actor": {
                    "type": "string",
                    "format": "at-identifier"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.unmuteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute a list of actors.",
        "operationId": "app.bsky.graph.unmuteActorList",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "list"
                ],
                "properties": {
                  "list": {
                    "type": "string",
                    "format": "at-uri"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.notification.getUnreadCount": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Get the count of unread notifications.",
        "operationId": "app.bsky.notification.getUnreadCount",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "seenAt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.notification.listNotifications": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Get a list of notifications.",
        "operationId": "app.bsky.notification.listNotifications",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seenAt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "notifications"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "notifications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.notification.listNotifications.notification"
                      }
                    },
                    "seenAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.notification.registerPush": {
      "post": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Register for push notifications with a service.",
        "operationId": "app.bsky.notification.registerPush",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "serviceDid",
                  "token",
                  "platform",
                  "appId"
                ],
                "properties": {
                  "serviceDid": {
                    "type": "string",
                    "format": "did"
                  },
                  "token": {
                    "type": "string"
                  },
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ios",
                      "android",
                      "web"
                    ]
                  },
                  "appId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.notification.updateSeen": {
      "post": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Notify server that the user has seen notifications.",
        "operationId": "app.bsky.notification.updateSeen",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "seenAt"
                ],
                "properties": {
                  "seenAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.unspecced.applyLabels": {
      "post": {
        "tags": [
          "app.bsky.unspecced"
        ],
        "summary": "Allow a labeler to apply labels directly.",
        "operationId": "app.bsky.unspecced.applyLabels",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "labels"
                ],
                "properties": {
                  "labels": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/com.atproto.label.defs.label"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.unspecced.getPopular": {
      "get": {
        "tags": [
          "app.bsky.unspecced"
        ],
        "summary": "DEPRECATED: will be removed soon. Use a feed generator alternative.",
        "operationId": "app.bsky.unspecced.getPopular",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "includeNsfw",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feed"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feed": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.feedViewPost"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.unspecced.getPopularFeedGenerators": {
      "get": {
        "tags": [
          "app.bsky.unspecced"
        ],
        "summary": "An unspecced view of globally popular feed generators.",
        "operationId": "app.bsky.unspecced.getPopularFeedGenerators",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "feeds"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "feeds": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.feed.defs.generatorView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.unspecced.getTaggedSuggestions": {
      "get": {
        "tags": [
          "app.bsky.unspecced"
        ],
        "summary": "Get a list of suggestions (feeds and users) tagged with categories",
        "operationId": "app.bsky.unspecced.getTaggedSuggestions",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "suggestions"
                  ],
                  "properties": {
                    "suggestions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/app.bsky.unspecced.getTaggedSuggestions.suggestion"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.createCommunicationTemplate": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Administrative action to create a new, re-usable communication (email for now) template.",
        "operationId": "com.atproto.admin.createCommunicationTemplate",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "subject",
                  "contentMarkdown",
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the template."
                  },
                  "contentMarkdown": {
                    "type": "string",
                    "description": "Content of the template, markdown supported, can contain variable placeholders."
                  },
                  "subject": {
                    "type": "string",
                    "description": "Subject of the message, used in emails."
                  },
                  "createdBy": {
                    "type": "string",
                    "description": "DID of the user who is creating the template.",
                    "format": "did"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.communicationTemplateView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.deleteCommunicationTemplate": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Delete a communication template.",
        "operationId": "com.atproto.admin.deleteCommunicationTemplate",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.disableAccountInvites": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Disable an account from receiving new invite codes, but does not invalidate existing codes.",
        "operationId": "com.atproto.admin.disableAccountInvites",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account"
                ],
                "properties": {
                  "account": {
                    "type": "string",
                    "format": "did"
                  },
                  "note": {
                    "type": "string",
                    "description": "Optional reason for disabled invites."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.disableInviteCodes": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Disable some set of codes and/or all codes associated with a set of users.",
        "operationId": "com.atproto.admin.disableInviteCodes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "codes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "accounts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.emitModerationEvent": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Take a moderation action on an actor.",
        "operationId": "com.atproto.admin.emitModerationEvent",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "subject",
                  "createdBy"
                ],
                "properties": {
                  "event": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.modEventTakedown"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.modEventAcknowledge"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.modEventEscalate"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.modEventComment"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.modEventLabel"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.modEventReport"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.modEventMute"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.modEventReverseTakedown"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.modEventUnmute"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.modEventEmail"
                      }
                    ]
                  },
                  "subject": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.repo.strongRef"
                      }
                    ]
                  },
                  "subjectBlobCids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "cid"
                    }
                  },
                  "createdBy": {
                    "type": "string",
                    "format": "did"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.modEventView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "SubjectHasAction"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.enableAccountInvites": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Re-enable an account's ability to receive invite codes.",
        "operationId": "com.atproto.admin.enableAccountInvites",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account"
                ],
                "properties": {
                  "account": {
                    "type": "string",
                    "format": "did"
                  },
                  "note": {
                    "type": "string",
                    "description": "Optional reason for enabled invites."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.getAccountInfo": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get details about an account.",
        "operationId": "com.atproto.admin.getAccountInfo",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "did"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.accountView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.getInviteCodes": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get an admin view of invite codes.",
        "operationId": "com.atproto.admin.getInviteCodes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "recent",
              "enum": [
                "recent",
                "usage"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 100
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "codes"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "codes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.server.defs.inviteCode"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.getModerationAction": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get details about a moderation action.",
        "operationId": "com.atproto.admin.getModerationAction",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.actionViewDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.getModerationActions": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get a list of moderation actions related to a subject.",
        "operationId": "com.atproto.admin.getModerationActions",
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "actions"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "actions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.actionView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.getModerationEvent": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get details about a moderation event.",
        "operationId": "com.atproto.admin.getModerationEvent",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.modEventViewDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.getModerationReport": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get details about a moderation report.",
        "operationId": "com.atproto.admin.getModerationReport",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.reportViewDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.getModerationReports": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get moderation reports related to a subject.",
        "operationId": "com.atproto.admin.getModerationReports",
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreSubjects",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "actionedBy",
            "in": "query",
            "description": "Get all reports that were actioned by a specific moderator.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Get all reports that were actioned by a specific moderator.",
              "format": "did"
            }
          },
          {
            "name": "reporters",
            "in": "query",
            "description": "Filter reports made by one or more DIDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "resolved",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "actionType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "com.atproto.admin.defs#takedown",
                "com.atproto.admin.defs#flag",
                "com.atproto.admin.defs#acknowledge",
                "com.atproto.admin.defs#escalate"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reverse",
            "in": "query",
            "description": "Reverse the order of the returned records. When true, returns reports in chronological order.",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Reverse the order of the returned records. When true, returns reports in chronological order."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "reports"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "reports": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.reportView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.getRecord": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get details about a record.",
        "operationId": "com.atproto.admin.getRecord",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "cid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.recordViewDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "RecordNotFound"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.getRepo": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get details about a repository.",
        "operationId": "com.atproto.admin.getRepo",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "did"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.repoViewDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "RepoNotFound"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.getSubjectStatus": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get the service-specific admin status of a subject (account, record, or blob).",
        "operationId": "com.atproto.admin.getSubjectStatus",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "did"
            }
          },
          {
            "name": "uri",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "at-uri"
            }
          },
          {
            "name": "blob",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "subject"
                  ],
                  "properties": {
                    "subject": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
                        },
                        {
                          "$ref": "#/components/schemas/com.atproto.repo.strongRef"
                        },
                        {
                          "$ref": "#/components/schemas/com.atproto.admin.defs.repoBlobRef"
                        }
                      ]
                    },
                    "takedown": {
                      "$ref": "#/components/schemas/com.atproto.admin.defs.statusAttr"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.listCommunicationTemplates": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get list of all communication templates.",
        "operationId": "com.atproto.admin.listCommunicationTemplates",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "communicationTemplates"
                  ],
                  "properties": {
                    "communicationTemplates": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.communicationTemplateView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.queryModerationEvents": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "List moderation events related to a subject.",
        "operationId": "com.atproto.admin.queryModerationEvents",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "types",
            "in": "query",
            "description": "The types of events (fully qualified string in the format of com.atproto.admin#modEvent<name>) to filter by. If not specified, all events are returned.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "did"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Sort direction for the events. Defaults to descending order of created at timestamp.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort direction for the events. Defaults to descending order of created at timestamp.",
              "default": "desc"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "includeAllUserRecords",
            "in": "query",
            "description": "If true, events on all record types (posts, lists, profile etc.) owned by the did are returned",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If true, events on all record types (posts, lists, profile etc.) owned by the did are returned"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "events"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.modEventView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.queryModerationStatuses": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "View moderation statuses of subjects (record or repo).",
        "operationId": "com.atproto.admin.queryModerationStatuses",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "description": "Search subjects by keyword from comments",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Search subjects by keyword from comments"
            }
          },
          {
            "name": "reportedAfter",
            "in": "query",
            "description": "Search subjects reported after a given timestamp",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Search subjects reported after a given timestamp",
              "format": "date-time"
            }
          },
          {
            "name": "reportedBefore",
            "in": "query",
            "description": "Search subjects reported before a given timestamp",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Search subjects reported before a given timestamp",
              "format": "date-time"
            }
          },
          {
            "name": "reviewedAfter",
            "in": "query",
            "description": "Search subjects reviewed after a given timestamp",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Search subjects reviewed after a given timestamp",
              "format": "date-time"
            }
          },
          {
            "name": "reviewedBefore",
            "in": "query",
            "description": "Search subjects reviewed before a given timestamp",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Search subjects reviewed before a given timestamp",
              "format": "date-time"
            }
          },
          {
            "name": "includeMuted",
            "in": "query",
            "description": "By default, we don't include muted subjects in the results. Set this to true to include them.",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "By default, we don't include muted subjects in the results. Set this to true to include them."
            }
          },
          {
            "name": "reviewState",
            "in": "query",
            "description": "Specify when fetching subjects in a certain state",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Specify when fetching subjects in a certain state"
            }
          },
          {
            "name": "ignoreSubjects",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          {
            "name": "lastReviewedBy",
            "in": "query",
            "description": "Get all subject statuses that were reviewed by a specific moderator",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Get all subject statuses that were reviewed by a specific moderator",
              "format": "did"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "lastReportedAt"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc"
            }
          },
          {
            "name": "takendown",
            "in": "query",
            "description": "Get subjects that were taken down",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Get subjects that were taken down"
            }
          },
          {
            "name": "appealed",
            "in": "query",
            "description": "Get subjects in unresolved appealed status",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Get subjects in unresolved appealed status"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "subjectStatuses"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "subjectStatuses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.subjectStatusView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.rebaseRepo": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Administrative action to rebase an account's repo",
        "operationId": "com.atproto.admin.rebaseRepo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "repo"
                ],
                "properties": {
                  "repo": {
                    "type": "string",
                    "description": "The handle or DID of the repo.",
                    "format": "at-identifier"
                  },
                  "swapCommit": {
                    "type": "string",
                    "description": "Compare and swap with the previous commit by cid.",
                    "format": "cid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "InvalidSwap"
                        },
                        {
                          "const": "ConcurrentWrites"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.resolveModerationReports": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Resolve moderation reports by an action.",
        "operationId": "com.atproto.admin.resolveModerationReports",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "actionId",
                  "reportIds",
                  "createdBy"
                ],
                "properties": {
                  "actionId": {
                    "type": "integer"
                  },
                  "reportIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "createdBy": {
                    "type": "string",
                    "format": "did"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.actionView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.reverseModerationAction": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Reverse a moderation action.",
        "operationId": "com.atproto.admin.reverseModerationAction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "reason",
                  "createdBy"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string",
                    "format": "did"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.actionView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.searchRepos": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Find repositories based on a search term.",
        "operationId": "com.atproto.admin.searchRepos",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "DEPRECATED: use 'q' instead",
            "required": false,
            "schema": {
              "type": "string",
              "description": "DEPRECATED: use 'q' instead"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "repos"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "repos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.repoView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.sendEmail": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Send email to a user's account email address.",
        "operationId": "com.atproto.admin.sendEmail",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipientDid",
                  "content",
                  "senderDid"
                ],
                "properties": {
                  "recipientDid": {
                    "type": "string",
                    "format": "did"
                  },
                  "content": {
                    "type": "string"
                  },
                  "subject": {
                    "type": "string"
                  },
                  "senderDid": {
                    "type": "string",
                    "format": "did"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Additional comment by the sender that won't be used in the email itself but helpful to provide more context for moderators/reviewers"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sent"
                  ],
                  "properties": {
                    "sent": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.takeModerationAction": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Take a moderation action on an actor.",
        "operationId": "com.atproto.admin.takeModerationAction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "action",
                  "subject",
                  "reason",
                  "createdBy"
                ],
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "com.atproto.admin.defs#takedown",
                      "com.atproto.admin.defs#flag",
                      "com.atproto.admin.defs#acknowledge"
                    ]
                  },
                  "subject": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.repo.strongRef"
                      }
                    ]
                  },
                  "subjectBlobCids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "cid"
                    }
                  },
                  "createLabelVals": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "negateLabelVals": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "reason": {
                    "type": "string"
                  },
                  "durationInHours": {
                    "type": "integer"
                  },
                  "createdBy": {
                    "type": "string",
                    "format": "did"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.actionView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "SubjectHasAction"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.updateAccountEmail": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Administrative action to update an account's email.",
        "operationId": "com.atproto.admin.updateAccountEmail",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "account",
                  "email"
                ],
                "properties": {
                  "account": {
                    "type": "string",
                    "description": "The handle or DID of the repo.",
                    "format": "at-identifier"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.updateAccountHandle": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Administrative action to update an account's handle.",
        "operationId": "com.atproto.admin.updateAccountHandle",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "did",
                  "handle"
                ],
                "properties": {
                  "did": {
                    "type": "string",
                    "format": "did"
                  },
                  "handle": {
                    "type": "string",
                    "format": "handle"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.updateCommunicationTemplate": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Administrative action to update an existing communication template. Allows passing partial fields to patch specific fields only.",
        "operationId": "com.atproto.admin.updateCommunicationTemplate",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID of the template to be updated."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the template."
                  },
                  "contentMarkdown": {
                    "type": "string",
                    "description": "Content of the template, markdown supported, can contain variable placeholders."
                  },
                  "subject": {
                    "type": "string",
                    "description": "Subject of the message, used in emails."
                  },
                  "updatedBy": {
                    "type": "string",
                    "description": "DID of the user who is updating the template.",
                    "format": "did"
                  },
                  "disabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.admin.defs.communicationTemplateView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.admin.updateSubjectStatus": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Update the service-specific admin status of a subject (account, record, or blob).",
        "operationId": "com.atproto.admin.updateSubjectStatus",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "subject"
                ],
                "properties": {
                  "subject": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.repo.strongRef"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.repoBlobRef"
                      }
                    ]
                  },
                  "takedown": {
                    "$ref": "#/components/schemas/com.atproto.admin.defs.statusAttr"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "subject"
                  ],
                  "properties": {
                    "subject": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
                        },
                        {
                          "$ref": "#/components/schemas/com.atproto.repo.strongRef"
                        },
                        {
                          "$ref": "#/components/schemas/com.atproto.admin.defs.repoBlobRef"
                        }
                      ]
                    },
                    "takedown": {
                      "$ref": "#/components/schemas/com.atproto.admin.defs.statusAttr"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.identity.resolveHandle": {
      "get": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Provides the DID of a repo.",
        "operationId": "com.atproto.identity.resolveHandle",
        "parameters": [
          {
            "name": "handle",
            "in": "query",
            "description": "The handle to resolve.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The handle to resolve.",
              "format": "handle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "did"
                  ],
                  "properties": {
                    "did": {
                      "type": "string",
                      "format": "did"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.identity.updateHandle": {
      "post": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Updates the handle of the account.",
        "operationId": "com.atproto.identity.updateHandle",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "handle"
                ],
                "properties": {
                  "handle": {
                    "type": "string",
                    "format": "handle"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.moderation.createReport": {
      "post": {
        "tags": [
          "com.atproto.moderation"
        ],
        "summary": "Report a repo or a record.",
        "operationId": "com.atproto.moderation.createReport",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reasonType",
                  "subject"
                ],
                "properties": {
                  "reasonType": {
                    "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonType"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "subject": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
                      },
                      {
                        "$ref": "#/components/schemas/com.atproto.repo.strongRef"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "reasonType",
                    "subject",
                    "reportedBy",
                    "createdAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "reasonType": {
                      "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonType"
                    },
                    "reason": {
                      "type": "string",
                      "maxLength": 20000
                    },
                    "subject": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
                        },
                        {
                          "$ref": "#/components/schemas/com.atproto.repo.strongRef"
                        }
                      ]
                    },
                    "reportedBy": {
                      "type": "string",
                      "format": "did"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.repo.applyWrites": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Apply a batch transaction of creates, updates, and deletes.",
        "operationId": "com.atproto.repo.applyWrites",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "repo",
                  "writes"
                ],
                "properties": {
                  "repo": {
                    "type": "string",
                    "description": "The handle or DID of the repo.",
                    "format": "at-identifier"
                  },
                  "validate": {
                    "type": "boolean",
                    "description": "Flag for validating the records.",
                    "default": true
                  },
                  "writes": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/com.atproto.repo.applyWrites.create"
                        },
                        {
                          "$ref": "#/components/schemas/com.atproto.repo.applyWrites.update"
                        },
                        {
                          "$ref": "#/components/schemas/com.atproto.repo.applyWrites.delete"
                        }
                      ]
                    }
                  },
                  "swapCommit": {
                    "type": "string",
                    "format": "cid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "InvalidSwap"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.repo.createRecord": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Create a new record.",
        "operationId": "com.atproto.repo.createRecord",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "repo",
                  "collection",
                  "record"
                ],
                "properties": {
                  "repo": {
                    "type": "string",
                    "description": "The handle or DID of the repo.",
                    "format": "at-identifier"
                  },
                  "collection": {
                    "type": "string",
                    "description": "The NSID of the record collection.",
                    "format": "nsid"
                  },
                  "rkey": {
                    "type": "string",
                    "description": "The key of the record.",
                    "maxLength": 15
                  },
                  "validate": {
                    "type": "boolean",
                    "description": "Flag for validating the record.",
                    "default": true
                  },
                  "record": {},
                  "swapCommit": {
                    "type": "string",
                    "description": "Compare and swap with the previous commit by CID.",
                    "format": "cid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "uri",
                    "cid"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string",
                      "format": "at-uri"
                    },
                    "cid": {
                      "type": "string",
                      "format": "cid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "InvalidSwap"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.repo.deleteRecord": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Delete a record, or ensure it doesn't exist.",
        "operationId": "com.atproto.repo.deleteRecord",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "repo",
                  "collection",
                  "rkey"
                ],
                "properties": {
                  "repo": {
                    "type": "string",
                    "description": "The handle or DID of the repo.",
                    "format": "at-identifier"
                  },
                  "collection": {
                    "type": "string",
                    "description": "The NSID of the record collection.",
                    "format": "nsid"
                  },
                  "rkey": {
                    "type": "string",
                    "description": "The key of the record."
                  },
                  "swapRecord": {
                    "type": "string",
                    "description": "Compare and swap with the previous record by CID.",
                    "format": "cid"
                  },
                  "swapCommit": {
                    "type": "string",
                    "description": "Compare and swap with the previous commit by CID.",
                    "format": "cid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "InvalidSwap"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.repo.describeRepo": {
      "get": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Get information about the repo, including the list of collections.",
        "operationId": "com.atproto.repo.describeRepo",
        "parameters": [
          {
            "name": "repo",
            "in": "query",
            "description": "The handle or DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The handle or DID of the repo.",
              "format": "at-identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "handle",
                    "did",
                    "didDoc",
                    "collections",
                    "handleIsCorrect"
                  ],
                  "properties": {
                    "handle": {
                      "type": "string",
                      "format": "handle"
                    },
                    "did": {
                      "type": "string",
                      "format": "did"
                    },
                    "didDoc": {},
                    "collections": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "nsid"
                      }
                    },
                    "handleIsCorrect": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.repo.getRecord": {
      "get": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Get a record.",
        "operationId": "com.atproto.repo.getRecord",
        "parameters": [
          {
            "name": "repo",
            "in": "query",
            "description": "The handle or DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The handle or DID of the repo.",
              "format": "at-identifier"
            }
          },
          {
            "name": "collection",
            "in": "query",
            "description": "The NSID of the record collection.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The NSID of the record collection.",
              "format": "nsid"
            }
          },
          {
            "name": "rkey",
            "in": "query",
            "description": "The key of the record.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The key of the record."
            }
          },
          {
            "name": "cid",
            "in": "query",
            "description": "The CID of the version of the record. If not specified, then return the most recent version.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The CID of the version of the record. If not specified, then return the most recent version.",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "uri",
                    "value"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string",
                      "format": "at-uri"
                    },
                    "cid": {
                      "type": "string",
                      "format": "cid"
                    },
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.repo.listRecords": {
      "get": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "List a range of records in a collection.",
        "operationId": "com.atproto.repo.listRecords",
        "parameters": [
          {
            "name": "repo",
            "in": "query",
            "description": "The handle or DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The handle or DID of the repo.",
              "format": "at-identifier"
            }
          },
          {
            "name": "collection",
            "in": "query",
            "description": "The NSID of the record type.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The NSID of the record type.",
              "format": "nsid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of records to return.",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rkeyStart",
            "in": "query",
            "description": "DEPRECATED: The lowest sort-ordered rkey to start from (exclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "description": "DEPRECATED: The lowest sort-ordered rkey to start from (exclusive)"
            }
          },
          {
            "name": "rkeyEnd",
            "in": "query",
            "description": "DEPRECATED: The highest sort-ordered rkey to stop at (exclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "description": "DEPRECATED: The highest sort-ordered rkey to stop at (exclusive)"
            }
          },
          {
            "name": "reverse",
            "in": "query",
            "description": "Flag to reverse the order of the returned records.",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Flag to reverse the order of the returned records."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "records"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "records": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.repo.listRecords.record"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.repo.putRecord": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Write a record, creating or updating it as needed.",
        "operationId": "com.atproto.repo.putRecord",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "repo",
                  "collection",
                  "rkey",
                  "record"
                ],
                "properties": {
                  "repo": {
                    "type": "string",
                    "description": "The handle or DID of the repo.",
                    "format": "at-identifier"
                  },
                  "collection": {
                    "type": "string",
                    "description": "The NSID of the record collection.",
                    "format": "nsid"
                  },
                  "rkey": {
                    "type": "string",
                    "description": "The key of the record.",
                    "maxLength": 15
                  },
                  "validate": {
                    "type": "boolean",
                    "description": "Flag for validating the record.",
                    "default": true
                  },
                  "record": {},
                  "swapRecord": {
                    "type": "string",
                    "description": "Compare and swap with the previous record by CID.",
                    "format": "cid"
                  },
                  "swapCommit": {
                    "type": "string",
                    "description": "Compare and swap with the previous commit by CID.",
                    "format": "cid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "uri",
                    "cid"
                  ],
                  "properties": {
                    "uri": {
                      "type": "string",
                      "format": "at-uri"
                    },
                    "cid": {
                      "type": "string",
                      "format": "cid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "InvalidSwap"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.repo.rebaseRepo": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Simple rebase of repo that deletes history",
        "operationId": "com.atproto.repo.rebaseRepo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "repo"
                ],
                "properties": {
                  "repo": {
                    "type": "string",
                    "description": "The handle or DID of the repo.",
                    "format": "at-identifier"
                  },
                  "swapCommit": {
                    "type": "string",
                    "description": "Compare and swap with the previous commit by cid.",
                    "format": "cid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "InvalidSwap"
                        },
                        {
                          "const": "ConcurrentWrites"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.repo.uploadBlob": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Upload a new blob to be added to repo in a later request.",
        "operationId": "com.atproto.repo.uploadBlob",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "*/*": {}
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "blob"
                  ],
                  "properties": {
                    "blob": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.confirmEmail": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Confirm an email using a token from com.atproto.server.requestEmailConfirmation.",
        "operationId": "com.atproto.server.confirmEmail",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "token"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "AccountNotFound"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "InvalidEmail"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.createAccount": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create an account.",
        "operationId": "com.atproto.server.createAccount",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "handle"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "handle": {
                    "type": "string",
                    "format": "handle"
                  },
                  "did": {
                    "type": "string",
                    "format": "did"
                  },
                  "inviteCode": {
                    "type": "string"
                  },
                  "verificationCode": {
                    "type": "string"
                  },
                  "verificationPhone": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "recoveryKey": {
                    "type": "string"
                  },
                  "plcOp": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "accessJwt",
                    "refreshJwt",
                    "handle",
                    "did"
                  ],
                  "properties": {
                    "accessJwt": {
                      "type": "string"
                    },
                    "refreshJwt": {
                      "type": "string"
                    },
                    "handle": {
                      "type": "string",
                      "format": "handle"
                    },
                    "did": {
                      "type": "string",
                      "format": "did"
                    },
                    "didDoc": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "InvalidHandle"
                        },
                        {
                          "const": "InvalidPassword"
                        },
                        {
                          "const": "InvalidInviteCode"
                        },
                        {
                          "const": "HandleNotAvailable"
                        },
                        {
                          "const": "UnsupportedDomain"
                        },
                        {
                          "const": "UnresolvableDid"
                        },
                        {
                          "const": "IncompatibleDidDoc"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.createAppPassword": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create an App Password.",
        "operationId": "com.atproto.server.createAppPassword",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.atproto.server.createAppPassword.appPassword"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "AccountTakedown"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.createInviteCode": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create an invite code.",
        "operationId": "com.atproto.server.createInviteCode",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "useCount"
                ],
                "properties": {
                  "useCount": {
                    "type": "integer"
                  },
                  "forAccount": {
                    "type": "string",
                    "format": "did"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.createInviteCodes": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create invite codes.",
        "operationId": "com.atproto.server.createInviteCodes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "codeCount",
                  "useCount"
                ],
                "properties": {
                  "codeCount": {
                    "type": "integer",
                    "default": 1
                  },
                  "useCount": {
                    "type": "integer"
                  },
                  "forAccounts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "did"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "codes"
                  ],
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.server.createInviteCodes.accountCodes"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.createSession": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create an authentication session.",
        "operationId": "com.atproto.server.createSession",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "identifier",
                  "password"
                ],
                "properties": {
                  "identifier": {
                    "type": "string",
                    "description": "Handle or other identifier supported by the server for the authenticating user."
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "accessJwt",
                    "refreshJwt",
                    "handle",
                    "did"
                  ],
                  "properties": {
                    "accessJwt": {
                      "type": "string"
                    },
                    "refreshJwt": {
                      "type": "string"
                    },
                    "handle": {
                      "type": "string",
                      "format": "handle"
                    },
                    "did": {
                      "type": "string",
                      "format": "did"
                    },
                    "didDoc": {},
                    "email": {
                      "type": "string"
                    },
                    "emailConfirmed": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "AccountTakedown"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.deleteAccount": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Delete an actor's account with a token and password.",
        "operationId": "com.atproto.server.deleteAccount",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "did",
                  "password",
                  "token"
                ],
                "properties": {
                  "did": {
                    "type": "string",
                    "format": "did"
                  },
                  "password": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.deleteSession": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Delete the current session.",
        "operationId": "com.atproto.server.deleteSession",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.describeServer": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Get a document describing the service's accounts configuration.",
        "operationId": "com.atproto.server.describeServer",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "availableUserDomains"
                  ],
                  "properties": {
                    "inviteCodeRequired": {
                      "type": "boolean"
                    },
                    "phoneVerificationRequired": {
                      "type": "boolean"
                    },
                    "availableUserDomains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "links": {
                      "$ref": "#/components/schemas/com.atproto.server.describeServer.links"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.getAccountInviteCodes": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Get all invite codes for a given account.",
        "operationId": "com.atproto.server.getAccountInviteCodes",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "includeUsed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "createAvailable",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "codes"
                  ],
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.server.defs.inviteCode"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "DuplicateCreate"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.getSession": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Get information about the current session.",
        "operationId": "com.atproto.server.getSession",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "handle",
                    "did"
                  ],
                  "properties": {
                    "handle": {
                      "type": "string",
                      "format": "handle"
                    },
                    "did": {
                      "type": "string",
                      "format": "did"
                    },
                    "email": {
                      "type": "string"
                    },
                    "emailConfirmed": {
                      "type": "boolean"
                    },
                    "didDoc": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.listAppPasswords": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "List all App Passwords.",
        "operationId": "com.atproto.server.listAppPasswords",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "passwords"
                  ],
                  "properties": {
                    "passwords": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.server.listAppPasswords.appPassword"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "AccountTakedown"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.refreshSession": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Refresh an authentication session.",
        "operationId": "com.atproto.server.refreshSession",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "accessJwt",
                    "refreshJwt",
                    "handle",
                    "did"
                  ],
                  "properties": {
                    "accessJwt": {
                      "type": "string"
                    },
                    "refreshJwt": {
                      "type": "string"
                    },
                    "handle": {
                      "type": "string",
                      "format": "handle"
                    },
                    "did": {
                      "type": "string",
                      "format": "did"
                    },
                    "didDoc": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "AccountTakedown"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.requestAccountDelete": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Initiate a user account deletion via email.",
        "operationId": "com.atproto.server.requestAccountDelete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.requestEmailConfirmation": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Request an email with a code to confirm ownership of email.",
        "operationId": "com.atproto.server.requestEmailConfirmation",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.requestEmailUpdate": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Request a token in order to update email.",
        "operationId": "com.atproto.server.requestEmailUpdate",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "tokenRequired"
                  ],
                  "properties": {
                    "tokenRequired": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.requestPasswordReset": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Initiate a user account password reset via email.",
        "operationId": "com.atproto.server.requestPasswordReset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.reserveSigningKey": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Reserve a repo signing key for account creation.",
        "operationId": "com.atproto.server.reserveSigningKey",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "did": {
                    "type": "string",
                    "description": "The did to reserve a new did:key for"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "signingKey"
                  ],
                  "properties": {
                    "signingKey": {
                      "type": "string",
                      "description": "Public signing key in the form of a did:key."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.resetPassword": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Reset a user account password using a token.",
        "operationId": "com.atproto.server.resetPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.revokeAppPassword": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Revoke an App Password by name.",
        "operationId": "com.atproto.server.revokeAppPassword",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.server.updateEmail": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Update an account's email.",
        "operationId": "com.atproto.server.updateEmail",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string",
                    "description": "Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "ExpiredToken"
                        },
                        {
                          "const": "InvalidToken"
                        },
                        {
                          "const": "TokenRequired"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "const": "AuthMissing"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.sync.getBlob": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get a blob associated with a given repo.",
        "operationId": "com.atproto.sync.getBlob",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          },
          {
            "name": "cid",
            "in": "query",
            "description": "The CID of the blob to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The CID of the blob to fetch",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.sync.getBlocks": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get blocks from a given repo.",
        "operationId": "com.atproto.sync.getBlocks",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          },
          {
            "name": "cids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "cid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.ipld.car": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.sync.getCheckout": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "DEPRECATED - please use com.atproto.sync.getRepo instead",
        "operationId": "com.atproto.sync.getCheckout",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.ipld.car": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.sync.getCommitPath": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Gets the path of repo commits",
        "operationId": "com.atproto.sync.getCommitPath",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          },
          {
            "name": "latest",
            "in": "query",
            "description": "The most recent commit",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The most recent commit",
              "format": "cid"
            }
          },
          {
            "name": "earliest",
            "in": "query",
            "description": "The earliest commit to start from",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The earliest commit to start from",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "commits"
                  ],
                  "properties": {
                    "commits": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "cid"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.sync.getHead": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "DEPRECATED - please use com.atproto.sync.getLatestCommit instead",
        "operationId": "com.atproto.sync.getHead",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "root"
                  ],
                  "properties": {
                    "root": {
                      "type": "string",
                      "format": "cid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "HeadNotFound"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.sync.getLatestCommit": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get the current commit CID & revision of the repo.",
        "operationId": "com.atproto.sync.getLatestCommit",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "cid",
                    "rev"
                  ],
                  "properties": {
                    "cid": {
                      "type": "string",
                      "format": "cid"
                    },
                    "rev": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        },
                        {
                          "const": "RepoNotFound"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.sync.getRecord": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get blocks needed for existence or non-existence of record.",
        "operationId": "com.atproto.sync.getRecord",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          },
          {
            "name": "collection",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "nsid"
            }
          },
          {
            "name": "rkey",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commit",
            "in": "query",
            "description": "An optional past commit CID.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "An optional past commit CID.",
              "format": "cid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.ipld.car": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.sync.getRepo": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Gets the DID's repo, optionally catching up from a specific revision.",
        "operationId": "com.atproto.sync.getRepo",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "The revision of the repo to catch up from.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The revision of the repo to catch up from."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.ipld.car": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.sync.listBlobs": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "List blob CIDs since some revision.",
        "operationId": "com.atproto.sync.listBlobs",
        "parameters": [
          {
            "name": "did",
            "in": "query",
            "description": "The DID of the repo.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The DID of the repo.",
              "format": "did"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Optional revision of the repo to list blobs since.",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Optional revision of the repo to list blobs since."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 500
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "cids"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "cids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "cid"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.sync.listRepos": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "List DIDs and root CIDs of hosted repos.",
        "operationId": "com.atproto.sync.listRepos",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 500
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "repos"
                  ],
                  "properties": {
                    "cursor": {
                      "type": "string"
                    },
                    "repos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/com.atproto.sync.listRepos.repo"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.temp.requestPhoneVerification": {
      "post": {
        "tags": [
          "com.atproto.temp"
        ],
        "summary": "Request a verification code to be sent to the supplied phone number",
        "operationId": "com.atproto.temp.requestPhoneVerification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "phoneNumber"
                ],
                "properties": {
                  "phoneNumber": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/com.atproto.temp.upgradeRepoVersion": {
      "post": {
        "tags": [
          "com.atproto.temp"
        ],
        "summary": "Upgrade a repo to v3",
        "operationId": "com.atproto.temp.upgradeRepoVersion",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "did"
                ],
                "properties": {
                  "did": {
                    "type": "string",
                    "format": "did"
                  },
                  "force": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error",
                    "message"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "oneOf": [
                        {
                          "const": "InvalidRequest"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "app.bsky.actor.defs.profileViewBasic": {
        "type": "object",
        "required": [
          "did",
          "handle"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "handle": {
            "type": "string",
            "format": "handle"
          },
          "displayName": {
            "type": "string",
            "maxLength": 640
          },
          "avatar": {
            "type": "string"
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.viewerState"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          }
        }
      },
      "app.bsky.actor.defs.profileView": {
        "type": "object",
        "required": [
          "did",
          "handle"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "handle": {
            "type": "string",
            "format": "handle"
          },
          "displayName": {
            "type": "string",
            "maxLength": 640
          },
          "description": {
            "type": "string",
            "maxLength": 2560
          },
          "avatar": {
            "type": "string"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.viewerState"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          }
        }
      },
      "app.bsky.actor.defs.profileViewDetailed": {
        "type": "object",
        "required": [
          "did",
          "handle"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "handle": {
            "type": "string",
            "format": "handle"
          },
          "displayName": {
            "type": "string",
            "maxLength": 640
          },
          "description": {
            "type": "string",
            "maxLength": 2560
          },
          "avatar": {
            "type": "string"
          },
          "banner": {
            "type": "string"
          },
          "followersCount": {
            "type": "integer"
          },
          "followsCount": {
            "type": "integer"
          },
          "postsCount": {
            "type": "integer"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.viewerState"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          }
        }
      },
      "app.bsky.actor.defs.viewerState": {
        "type": "object",
        "properties": {
          "muted": {
            "type": "boolean"
          },
          "mutedByList": {
            "$ref": "#/components/schemas/app.bsky.graph.defs.listViewBasic"
          },
          "blockedBy": {
            "type": "boolean"
          },
          "blocking": {
            "type": "string",
            "format": "at-uri"
          },
          "blockingByList": {
            "$ref": "#/components/schemas/app.bsky.graph.defs.listViewBasic"
          },
          "following": {
            "type": "string",
            "format": "at-uri"
          },
          "followedBy": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.actor.defs.preferences": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/app.bsky.actor.defs.adultContentPref"
            },
            {
              "$ref": "#/components/schemas/app.bsky.actor.defs.contentLabelPref"
            },
            {
              "$ref": "#/components/schemas/app.bsky.actor.defs.savedFeedsPref"
            },
            {
              "$ref": "#/components/schemas/app.bsky.actor.defs.personalDetailsPref"
            },
            {
              "$ref": "#/components/schemas/app.bsky.actor.defs.feedViewPref"
            },
            {
              "$ref": "#/components/schemas/app.bsky.actor.defs.threadViewPref"
            },
            {
              "$ref": "#/components/schemas/app.bsky.actor.defs.interestsPref"
            }
          ]
        }
      },
      "app.bsky.actor.defs.adultContentPref": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "app.bsky.actor.defs.contentLabelPref": {
        "type": "object",
        "required": [
          "label",
          "visibility"
        ],
        "properties": {
          "label": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "show",
              "warn",
              "hide"
            ]
          }
        }
      },
      "app.bsky.actor.defs.savedFeedsPref": {
        "type": "object",
        "required": [
          "pinned",
          "saved"
        ],
        "properties": {
          "pinned": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "at-uri"
            }
          },
          "saved": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "at-uri"
            }
          }
        }
      },
      "app.bsky.actor.defs.personalDetailsPref": {
        "type": "object",
        "properties": {
          "birthDate": {
            "type": "string",
            "description": "The birth date of account owner.",
            "format": "date-time"
          }
        }
      },
      "app.bsky.actor.defs.feedViewPref": {
        "type": "object",
        "required": [
          "feed"
        ],
        "properties": {
          "feed": {
            "type": "string",
            "description": "The URI of the feed, or an identifier which describes the feed."
          },
          "hideReplies": {
            "type": "boolean",
            "description": "Hide replies in the feed."
          },
          "hideRepliesByUnfollowed": {
            "type": "boolean",
            "description": "Hide replies in the feed if they are not by followed users."
          },
          "hideRepliesByLikeCount": {
            "type": "integer"
          },
          "hideReposts": {
            "type": "boolean",
            "description": "Hide reposts in the feed."
          },
          "hideQuotePosts": {
            "type": "boolean",
            "description": "Hide quote posts in the feed."
          }
        }
      },
      "app.bsky.actor.defs.threadViewPref": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "string",
            "description": "Sorting mode for threads.",
            "enum": [
              "oldest",
              "newest",
              "most-likes",
              "random"
            ]
          },
          "prioritizeFollowedUsers": {
            "type": "boolean",
            "description": "Show followed users at the top of all replies."
          }
        }
      },
      "app.bsky.actor.defs.interestsPref": {
        "type": "object",
        "required": [
          "tags"
        ],
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 640
            },
            "maxItems": 100
          }
        }
      },
      "app.bsky.actor.profile": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "maxLength": 640
          },
          "description": {
            "type": "string",
            "maxLength": 2560
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "maxLength": 1000000
          },
          "banner": {
            "type": "string",
            "format": "binary",
            "maxLength": 1000000
          },
          "labels": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.label.defs.selfLabels"
              }
            ]
          }
        }
      },
      "app.bsky.embed.external": {
        "type": "object",
        "required": [
          "external"
        ],
        "properties": {
          "external": {
            "$ref": "#/components/schemas/app.bsky.embed.external.external"
          }
        }
      },
      "app.bsky.embed.external.external": {
        "type": "object",
        "required": [
          "uri",
          "title",
          "description"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "thumb": {
            "type": "string",
            "format": "binary",
            "maxLength": 1000000
          }
        }
      },
      "app.bsky.embed.external.view": {
        "type": "object",
        "required": [
          "external"
        ],
        "properties": {
          "external": {
            "$ref": "#/components/schemas/app.bsky.embed.external.viewExternal"
          }
        }
      },
      "app.bsky.embed.external.viewExternal": {
        "type": "object",
        "required": [
          "uri",
          "title",
          "description"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "thumb": {
            "type": "string"
          }
        }
      },
      "app.bsky.embed.images": {
        "type": "object",
        "required": [
          "images"
        ],
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.embed.images.image"
            },
            "maxItems": 4
          }
        }
      },
      "app.bsky.embed.images.image": {
        "type": "object",
        "required": [
          "image",
          "alt"
        ],
        "properties": {
          "image": {
            "type": "string",
            "format": "binary",
            "maxLength": 1000000
          },
          "alt": {
            "type": "string"
          },
          "aspectRatio": {
            "$ref": "#/components/schemas/app.bsky.embed.images.aspectRatio"
          }
        }
      },
      "app.bsky.embed.images.aspectRatio": {
        "type": "object",
        "description": "width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit.",
        "required": [
          "width",
          "height"
        ],
        "properties": {
          "width": {
            "type": "integer",
            "minimum": 1
          },
          "height": {
            "type": "integer",
            "minimum": 1
          }
        }
      },
      "app.bsky.embed.images.view": {
        "type": "object",
        "required": [
          "images"
        ],
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.embed.images.viewImage"
            },
            "maxItems": 4
          }
        }
      },
      "app.bsky.embed.images.viewImage": {
        "type": "object",
        "required": [
          "thumb",
          "fullsize",
          "alt"
        ],
        "properties": {
          "thumb": {
            "type": "string"
          },
          "fullsize": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "aspectRatio": {
            "$ref": "#/components/schemas/app.bsky.embed.images.aspectRatio"
          }
        }
      },
      "app.bsky.embed.record": {
        "type": "object",
        "required": [
          "record"
        ],
        "properties": {
          "record": {
            "$ref": "#/components/schemas/com.atproto.repo.strongRef"
          }
        }
      },
      "app.bsky.embed.record.view": {
        "type": "object",
        "required": [
          "record"
        ],
        "properties": {
          "record": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.embed.record.viewRecord"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.record.viewNotFound"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.record.viewBlocked"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.generatorView"
              },
              {
                "$ref": "#/components/schemas/app.bsky.graph.defs.listView"
              }
            ]
          }
        }
      },
      "app.bsky.embed.record.viewRecord": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "author",
          "value",
          "indexedAt"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "author": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileViewBasic"
          },
          "value": {},
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          },
          "embeds": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/app.bsky.embed.images.view"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.embed.external.view"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.embed.record.view"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.embed.recordWithMedia.view"
                }
              ]
            }
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.embed.record.viewNotFound": {
        "type": "object",
        "required": [
          "uri",
          "notFound"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "notFound": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "app.bsky.embed.record.viewBlocked": {
        "type": "object",
        "required": [
          "uri",
          "blocked",
          "author"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "blocked": {
            "type": "boolean",
            "default": true
          },
          "author": {
            "$ref": "#/components/schemas/app.bsky.feed.defs.blockedAuthor"
          }
        }
      },
      "app.bsky.embed.recordWithMedia": {
        "type": "object",
        "required": [
          "record",
          "media"
        ],
        "properties": {
          "record": {
            "$ref": "#/components/schemas/app.bsky.embed.record"
          },
          "media": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.embed.images"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.external"
              }
            ]
          }
        }
      },
      "app.bsky.embed.recordWithMedia.view": {
        "type": "object",
        "required": [
          "record",
          "media"
        ],
        "properties": {
          "record": {
            "$ref": "#/components/schemas/app.bsky.embed.record.view"
          },
          "media": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.embed.images.view"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.external.view"
              }
            ]
          }
        }
      },
      "app.bsky.feed.defs.postView": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "author",
          "record",
          "indexedAt"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "author": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileViewBasic"
          },
          "record": {},
          "embed": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.embed.images.view"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.external.view"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.record.view"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.recordWithMedia.view"
              }
            ]
          },
          "replyCount": {
            "type": "integer"
          },
          "repostCount": {
            "type": "integer"
          },
          "likeCount": {
            "type": "integer"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.feed.defs.viewerState"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          },
          "threadgate": {
            "$ref": "#/components/schemas/app.bsky.feed.defs.threadgateView"
          }
        }
      },
      "app.bsky.feed.defs.viewerState": {
        "type": "object",
        "properties": {
          "repost": {
            "type": "string",
            "format": "at-uri"
          },
          "like": {
            "type": "string",
            "format": "at-uri"
          },
          "replyDisabled": {
            "type": "boolean"
          }
        }
      },
      "app.bsky.feed.defs.feedViewPost": {
        "type": "object",
        "required": [
          "post"
        ],
        "properties": {
          "post": {
            "$ref": "#/components/schemas/app.bsky.feed.defs.postView"
          },
          "reply": {
            "$ref": "#/components/schemas/app.bsky.feed.defs.replyRef"
          },
          "reason": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.reasonRepost"
              }
            ]
          }
        }
      },
      "app.bsky.feed.defs.replyRef": {
        "type": "object",
        "required": [
          "root",
          "parent"
        ],
        "properties": {
          "root": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.postView"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.notFoundPost"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.blockedPost"
              }
            ]
          },
          "parent": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.postView"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.notFoundPost"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.blockedPost"
              }
            ]
          }
        }
      },
      "app.bsky.feed.defs.reasonRepost": {
        "type": "object",
        "required": [
          "by",
          "indexedAt"
        ],
        "properties": {
          "by": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileViewBasic"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.feed.defs.threadViewPost": {
        "type": "object",
        "required": [
          "post"
        ],
        "properties": {
          "post": {
            "$ref": "#/components/schemas/app.bsky.feed.defs.postView"
          },
          "parent": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.threadViewPost"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.notFoundPost"
              },
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.blockedPost"
              }
            ]
          },
          "replies": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/app.bsky.feed.defs.threadViewPost"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.feed.defs.notFoundPost"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.feed.defs.blockedPost"
                }
              ]
            }
          }
        }
      },
      "app.bsky.feed.defs.notFoundPost": {
        "type": "object",
        "required": [
          "uri",
          "notFound"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "notFound": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "app.bsky.feed.defs.blockedPost": {
        "type": "object",
        "required": [
          "uri",
          "blocked",
          "author"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "blocked": {
            "type": "boolean",
            "default": true
          },
          "author": {
            "$ref": "#/components/schemas/app.bsky.feed.defs.blockedAuthor"
          }
        }
      },
      "app.bsky.feed.defs.blockedAuthor": {
        "type": "object",
        "required": [
          "did"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.viewerState"
          }
        }
      },
      "app.bsky.feed.defs.generatorView": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "did",
          "creator",
          "displayName",
          "indexedAt"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "did": {
            "type": "string",
            "format": "did"
          },
          "creator": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "maxLength": 3000
          },
          "descriptionFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.richtext.facet"
            }
          },
          "avatar": {
            "type": "string"
          },
          "likeCount": {
            "type": "integer",
            "minimum": 0
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.feed.defs.generatorViewerState"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.feed.defs.generatorViewerState": {
        "type": "object",
        "properties": {
          "like": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.feed.defs.skeletonFeedPost": {
        "type": "object",
        "required": [
          "post"
        ],
        "properties": {
          "post": {
            "type": "string",
            "format": "at-uri"
          },
          "reason": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.feed.defs.skeletonReasonRepost"
              }
            ]
          }
        }
      },
      "app.bsky.feed.defs.skeletonReasonRepost": {
        "type": "object",
        "required": [
          "repost"
        ],
        "properties": {
          "repost": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.feed.defs.threadgateView": {
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "record": {},
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.graph.defs.listViewBasic"
            }
          }
        }
      },
      "app.bsky.feed.describeFeedGenerator.feed": {
        "type": "object",
        "required": [
          "uri"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.feed.describeFeedGenerator.links": {
        "type": "object",
        "properties": {
          "privacyPolicy": {
            "type": "string"
          },
          "termsOfService": {
            "type": "string"
          }
        }
      },
      "app.bsky.feed.generator": {
        "type": "object",
        "required": [
          "did",
          "displayName",
          "createdAt"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "displayName": {
            "type": "string",
            "maxLength": 240
          },
          "description": {
            "type": "string",
            "maxLength": 3000
          },
          "descriptionFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.richtext.facet"
            }
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "maxLength": 1000000
          },
          "labels": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.label.defs.selfLabels"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.feed.getLikes.like": {
        "type": "object",
        "required": [
          "indexedAt",
          "createdAt",
          "actor"
        ],
        "properties": {
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "actor": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
          }
        }
      },
      "app.bsky.feed.like": {
        "type": "object",
        "required": [
          "subject",
          "createdAt"
        ],
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/com.atproto.repo.strongRef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.feed.post": {
        "type": "object",
        "required": [
          "text",
          "createdAt"
        ],
        "properties": {
          "text": {
            "type": "string",
            "maxLength": 3000
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.feed.post.entity"
            }
          },
          "facets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.richtext.facet"
            }
          },
          "reply": {
            "$ref": "#/components/schemas/app.bsky.feed.post.replyRef"
          },
          "embed": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/app.bsky.embed.images"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.external"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.record"
              },
              {
                "$ref": "#/components/schemas/app.bsky.embed.recordWithMedia"
              }
            ]
          },
          "langs": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "language"
            },
            "maxItems": 3
          },
          "labels": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.label.defs.selfLabels"
              }
            ]
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 640
            },
            "maxItems": 8
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.feed.post.replyRef": {
        "type": "object",
        "required": [
          "root",
          "parent"
        ],
        "properties": {
          "root": {
            "$ref": "#/components/schemas/com.atproto.repo.strongRef"
          },
          "parent": {
            "$ref": "#/components/schemas/com.atproto.repo.strongRef"
          }
        }
      },
      "app.bsky.feed.post.entity": {
        "type": "object",
        "description": "Deprecated: use facets instead.",
        "required": [
          "index",
          "type",
          "value"
        ],
        "properties": {
          "index": {
            "$ref": "#/components/schemas/app.bsky.feed.post.textSlice"
          },
          "type": {
            "type": "string",
            "description": "Expected values are 'mention' and 'link'."
          },
          "value": {
            "type": "string"
          }
        }
      },
      "app.bsky.feed.post.textSlice": {
        "type": "object",
        "description": "Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings.",
        "required": [
          "start",
          "end"
        ],
        "properties": {
          "start": {
            "type": "integer",
            "minimum": 0
          },
          "end": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "app.bsky.feed.repost": {
        "type": "object",
        "required": [
          "subject",
          "createdAt"
        ],
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/com.atproto.repo.strongRef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.feed.threadgate": {
        "type": "object",
        "required": [
          "post",
          "createdAt"
        ],
        "properties": {
          "post": {
            "type": "string",
            "format": "at-uri"
          },
          "allow": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/app.bsky.feed.threadgate.mentionRule"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.feed.threadgate.followingRule"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.feed.threadgate.listRule"
                }
              ]
            },
            "maxItems": 5
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.feed.threadgate.mentionRule": {
        "type": "object",
        "description": "Allow replies from actors mentioned in your post.",
        "properties": {}
      },
      "app.bsky.feed.threadgate.followingRule": {
        "type": "object",
        "description": "Allow replies from actors you follow.",
        "properties": {}
      },
      "app.bsky.feed.threadgate.listRule": {
        "type": "object",
        "description": "Allow replies from actors on a list.",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.graph.block": {
        "type": "object",
        "required": [
          "subject",
          "createdAt"
        ],
        "properties": {
          "subject": {
            "type": "string",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.graph.defs.listViewBasic": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "name",
          "purpose"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "purpose": {
            "$ref": "#/components/schemas/app.bsky.graph.defs.listPurpose"
          },
          "avatar": {
            "type": "string"
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.graph.defs.listViewerState"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.graph.defs.listView": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "creator",
          "name",
          "purpose",
          "indexedAt"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "creator": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "purpose": {
            "$ref": "#/components/schemas/app.bsky.graph.defs.listPurpose"
          },
          "description": {
            "type": "string",
            "maxLength": 3000
          },
          "descriptionFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.richtext.facet"
            }
          },
          "avatar": {
            "type": "string"
          },
          "viewer": {
            "$ref": "#/components/schemas/app.bsky.graph.defs.listViewerState"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.graph.defs.listItemView": {
        "type": "object",
        "required": [
          "uri",
          "subject"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "subject": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
          }
        }
      },
      "app.bsky.graph.defs.listPurpose": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/app.bsky.graph.defs.modlist"
          },
          {
            "$ref": "#/components/schemas/app.bsky.graph.defs.curatelist"
          }
        ]
      },
      "app.bsky.graph.defs.modlist": {
        "type": "string",
        "format": "token",
        "description": "A list of actors to apply an aggregate moderation action (mute/block) on."
      },
      "app.bsky.graph.defs.curatelist": {
        "type": "string",
        "format": "token",
        "description": "A list of actors used for curation purposes such as list feeds or interaction gating."
      },
      "app.bsky.graph.defs.listViewerState": {
        "type": "object",
        "properties": {
          "muted": {
            "type": "boolean"
          },
          "blocked": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.graph.defs.notFoundActor": {
        "type": "object",
        "description": "indicates that a handle or DID could not be resolved",
        "required": [
          "actor",
          "notFound"
        ],
        "properties": {
          "actor": {
            "type": "string",
            "format": "at-identifier"
          },
          "notFound": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "app.bsky.graph.defs.relationship": {
        "type": "object",
        "description": "lists the bi-directional graph relationships between one actor (not indicated in the object), and the target actors (the DID included in the object)",
        "required": [
          "did"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "following": {
            "type": "string",
            "description": "if the actor follows this DID, this is the AT-URI of the follow record",
            "format": "at-uri"
          },
          "followedBy": {
            "type": "string",
            "description": "if the actor is followed by this DID, contains the AT-URI of the follow record",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.graph.follow": {
        "type": "object",
        "required": [
          "subject",
          "createdAt"
        ],
        "properties": {
          "subject": {
            "type": "string",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.graph.list": {
        "type": "object",
        "required": [
          "name",
          "purpose",
          "createdAt"
        ],
        "properties": {
          "purpose": {
            "$ref": "#/components/schemas/app.bsky.graph.defs.listPurpose"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "description": {
            "type": "string",
            "maxLength": 3000
          },
          "descriptionFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app.bsky.richtext.facet"
            }
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "maxLength": 1000000
          },
          "labels": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.label.defs.selfLabels"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.graph.listblock": {
        "type": "object",
        "required": [
          "subject",
          "createdAt"
        ],
        "properties": {
          "subject": {
            "type": "string",
            "format": "at-uri"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.graph.listitem": {
        "type": "object",
        "required": [
          "subject",
          "list",
          "createdAt"
        ],
        "properties": {
          "subject": {
            "type": "string",
            "format": "did"
          },
          "list": {
            "type": "string",
            "format": "at-uri"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "app.bsky.notification.listNotifications.notification": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "author",
          "reason",
          "record",
          "isRead",
          "indexedAt"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "author": {
            "$ref": "#/components/schemas/app.bsky.actor.defs.profileView"
          },
          "reason": {
            "type": "string",
            "description": "Expected values are 'like', 'repost', 'follow', 'mention', 'reply', and 'quote'.",
            "enum": [
              "like",
              "repost",
              "follow",
              "mention",
              "reply",
              "quote"
            ]
          },
          "reasonSubject": {
            "type": "string",
            "format": "at-uri"
          },
          "record": {},
          "isRead": {
            "type": "boolean"
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          }
        }
      },
      "app.bsky.richtext.facet": {
        "type": "object",
        "required": [
          "index",
          "features"
        ],
        "properties": {
          "index": {
            "$ref": "#/components/schemas/app.bsky.richtext.facet.byteSlice"
          },
          "features": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/app.bsky.richtext.facet.mention"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.richtext.facet.link"
                },
                {
                  "$ref": "#/components/schemas/app.bsky.richtext.facet.tag"
                }
              ]
            }
          }
        }
      },
      "app.bsky.richtext.facet.mention": {
        "type": "object",
        "description": "A facet feature for actor mentions.",
        "required": [
          "did"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          }
        }
      },
      "app.bsky.richtext.facet.link": {
        "type": "object",
        "description": "A facet feature for links.",
        "required": [
          "uri"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "app.bsky.richtext.facet.tag": {
        "type": "object",
        "description": "A hashtag.",
        "required": [
          "tag"
        ],
        "properties": {
          "tag": {
            "type": "string",
            "maxLength": 640
          }
        }
      },
      "app.bsky.richtext.facet.byteSlice": {
        "type": "object",
        "description": "A text segment. Start is inclusive, end is exclusive. Indices are for utf8-encoded strings.",
        "required": [
          "byteStart",
          "byteEnd"
        ],
        "properties": {
          "byteStart": {
            "type": "integer",
            "minimum": 0
          },
          "byteEnd": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "app.bsky.unspecced.defs.skeletonSearchPost": {
        "type": "object",
        "required": [
          "uri"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "app.bsky.unspecced.defs.skeletonSearchActor": {
        "type": "object",
        "required": [
          "did"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          }
        }
      },
      "app.bsky.unspecced.getTaggedSuggestions.suggestion": {
        "type": "object",
        "required": [
          "tag",
          "subjectType",
          "subject"
        ],
        "properties": {
          "tag": {
            "type": "string"
          },
          "subjectType": {
            "type": "string",
            "enum": [
              "actor",
              "feed"
            ]
          },
          "subject": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "com.atproto.admin.defs.statusAttr": {
        "type": "object",
        "required": [
          "applied"
        ],
        "properties": {
          "applied": {
            "type": "boolean"
          },
          "ref": {
            "type": "string"
          }
        }
      },
      "com.atproto.admin.defs.modEventView": {
        "type": "object",
        "required": [
          "id",
          "event",
          "subject",
          "subjectBlobCids",
          "createdBy",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "event": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventTakedown"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventReverseTakedown"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventComment"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventReport"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventLabel"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventAcknowledge"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventEscalate"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventMute"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventEmail"
              }
            ]
          },
          "subject": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
              },
              {
                "$ref": "#/components/schemas/com.atproto.repo.strongRef"
              }
            ]
          },
          "subjectBlobCids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdBy": {
            "type": "string",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorHandle": {
            "type": "string"
          },
          "subjectHandle": {
            "type": "string"
          }
        }
      },
      "com.atproto.admin.defs.modEventViewDetail": {
        "type": "object",
        "required": [
          "id",
          "event",
          "subject",
          "subjectBlobs",
          "createdBy",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "event": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventTakedown"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventReverseTakedown"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventComment"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventReport"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventLabel"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventAcknowledge"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventEscalate"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventMute"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.modEventResolveAppeal"
              }
            ]
          },
          "subject": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.repoView"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.repoViewNotFound"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.recordView"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.recordViewNotFound"
              }
            ]
          },
          "subjectBlobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.admin.defs.blobView"
            }
          },
          "createdBy": {
            "type": "string",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.admin.defs.reportView": {
        "type": "object",
        "required": [
          "id",
          "reasonType",
          "subject",
          "reportedBy",
          "createdAt",
          "resolvedByActionIds"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "reasonType": {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonType"
          },
          "comment": {
            "type": "string"
          },
          "subjectRepoHandle": {
            "type": "string"
          },
          "subject": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
              },
              {
                "$ref": "#/components/schemas/com.atproto.repo.strongRef"
              }
            ]
          },
          "reportedBy": {
            "type": "string",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "resolvedByActionIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "com.atproto.admin.defs.subjectStatusView": {
        "type": "object",
        "required": [
          "id",
          "subject",
          "createdAt",
          "updatedAt",
          "reviewState"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "subject": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.repoRef"
              },
              {
                "$ref": "#/components/schemas/com.atproto.repo.strongRef"
              }
            ]
          },
          "subjectBlobCids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "cid"
            }
          },
          "subjectRepoHandle": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "description": "Timestamp referencing when the last update was made to the moderation status of the subject",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "description": "Timestamp referencing the first moderation status impacting event was emitted on the subject",
            "format": "date-time"
          },
          "reviewState": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.subjectReviewState"
          },
          "comment": {
            "type": "string",
            "description": "Sticky comment on the subject."
          },
          "muteUntil": {
            "type": "string",
            "format": "date-time"
          },
          "lastReviewedBy": {
            "type": "string",
            "format": "did"
          },
          "lastReviewedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastReportedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastAppealedAt": {
            "type": "string",
            "description": "Timestamp referencing when the author of the subject appealed a moderation action",
            "format": "date-time"
          },
          "takendown": {
            "type": "boolean"
          },
          "appealed": {
            "type": "boolean",
            "description": "True indicates that the a previously taken moderator action was appealed against, by the author of the content. False indicates last appeal was resolved by moderators."
          },
          "suspendUntil": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.admin.defs.reportViewDetail": {
        "type": "object",
        "required": [
          "id",
          "reasonType",
          "subject",
          "reportedBy",
          "createdAt",
          "resolvedByActions"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "reasonType": {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonType"
          },
          "comment": {
            "type": "string"
          },
          "subject": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.repoView"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.repoViewNotFound"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.recordView"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.recordViewNotFound"
              }
            ]
          },
          "subjectStatus": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.subjectStatusView"
          },
          "reportedBy": {
            "type": "string",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "resolvedByActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.admin.defs.modEventView"
            }
          }
        }
      },
      "com.atproto.admin.defs.repoView": {
        "type": "object",
        "required": [
          "did",
          "handle",
          "relatedRecords",
          "indexedAt",
          "moderation"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "handle": {
            "type": "string",
            "format": "handle"
          },
          "email": {
            "type": "string"
          },
          "relatedRecords": {
            "type": "array",
            "items": {}
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "moderation": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.moderation"
          },
          "invitedBy": {
            "$ref": "#/components/schemas/com.atproto.server.defs.inviteCode"
          },
          "invitesDisabled": {
            "type": "boolean"
          },
          "inviteNote": {
            "type": "string"
          }
        }
      },
      "com.atproto.admin.defs.repoViewDetail": {
        "type": "object",
        "required": [
          "did",
          "handle",
          "relatedRecords",
          "indexedAt",
          "moderation"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "handle": {
            "type": "string",
            "format": "handle"
          },
          "email": {
            "type": "string"
          },
          "relatedRecords": {
            "type": "array",
            "items": {}
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "moderation": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.moderationDetail"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          },
          "invitedBy": {
            "$ref": "#/components/schemas/com.atproto.server.defs.inviteCode"
          },
          "invites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.server.defs.inviteCode"
            }
          },
          "invitesDisabled": {
            "type": "boolean"
          },
          "inviteNote": {
            "type": "string"
          },
          "emailConfirmedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.admin.defs.accountView": {
        "type": "object",
        "required": [
          "did",
          "handle",
          "indexedAt"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "handle": {
            "type": "string",
            "format": "handle"
          },
          "email": {
            "type": "string"
          },
          "relatedRecords": {
            "type": "array",
            "items": {}
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "invitedBy": {
            "$ref": "#/components/schemas/com.atproto.server.defs.inviteCode"
          },
          "invites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.server.defs.inviteCode"
            }
          },
          "invitesDisabled": {
            "type": "boolean"
          },
          "emailConfirmedAt": {
            "type": "string",
            "format": "date-time"
          },
          "inviteNote": {
            "type": "string"
          }
        }
      },
      "com.atproto.admin.defs.repoViewNotFound": {
        "type": "object",
        "required": [
          "did"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          }
        }
      },
      "com.atproto.admin.defs.repoRef": {
        "type": "object",
        "required": [
          "did"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          }
        }
      },
      "com.atproto.admin.defs.repoBlobRef": {
        "type": "object",
        "required": [
          "did",
          "cid"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "recordUri": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "com.atproto.admin.defs.recordView": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "value",
          "blobCids",
          "indexedAt",
          "moderation",
          "repo"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "value": {},
          "blobCids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "cid"
            }
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "moderation": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.moderation"
          },
          "repo": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.repoView"
          }
        }
      },
      "com.atproto.admin.defs.recordViewDetail": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "value",
          "blobs",
          "indexedAt",
          "moderation",
          "repo"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "value": {},
          "blobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.admin.defs.blobView"
            }
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          },
          "indexedAt": {
            "type": "string",
            "format": "date-time"
          },
          "moderation": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.moderationDetail"
          },
          "repo": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.repoView"
          }
        }
      },
      "com.atproto.admin.defs.recordViewNotFound": {
        "type": "object",
        "required": [
          "uri"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          }
        }
      },
      "com.atproto.admin.defs.moderation": {
        "type": "object",
        "properties": {
          "subjectStatus": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.subjectStatusView"
          }
        }
      },
      "com.atproto.admin.defs.moderationDetail": {
        "type": "object",
        "properties": {
          "subjectStatus": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.subjectStatusView"
          }
        }
      },
      "com.atproto.admin.defs.blobView": {
        "type": "object",
        "required": [
          "cid",
          "mimeType",
          "size",
          "createdAt"
        ],
        "properties": {
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "mimeType": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "details": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.imageDetails"
              },
              {
                "$ref": "#/components/schemas/com.atproto.admin.defs.videoDetails"
              }
            ]
          },
          "moderation": {
            "$ref": "#/components/schemas/com.atproto.admin.defs.moderation"
          }
        }
      },
      "com.atproto.admin.defs.imageDetails": {
        "type": "object",
        "required": [
          "width",
          "height"
        ],
        "properties": {
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          }
        }
      },
      "com.atproto.admin.defs.videoDetails": {
        "type": "object",
        "required": [
          "width",
          "height",
          "length"
        ],
        "properties": {
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "length": {
            "type": "integer"
          }
        }
      },
      "com.atproto.admin.defs.subjectReviewState": {
        "type": "string",
        "enum": [
          "#reviewOpen",
          "#reviewEscalated",
          "#reviewClosed"
        ]
      },
      "com.atproto.admin.defs.reviewOpen": {
        "type": "string",
        "format": "token",
        "description": "Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator"
      },
      "com.atproto.admin.defs.reviewEscalated": {
        "type": "string",
        "format": "token",
        "description": "Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator"
      },
      "com.atproto.admin.defs.reviewClosed": {
        "type": "string",
        "format": "token",
        "description": "Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator"
      },
      "com.atproto.admin.defs.modEventTakedown": {
        "type": "object",
        "description": "Take down a subject permanently or temporarily",
        "properties": {
          "comment": {
            "type": "string"
          },
          "durationInHours": {
            "type": "integer"
          }
        }
      },
      "com.atproto.admin.defs.modEventReverseTakedown": {
        "type": "object",
        "description": "Revert take down action on a subject",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Describe reasoning behind the reversal."
          }
        }
      },
      "com.atproto.admin.defs.modEventResolveAppeal": {
        "type": "object",
        "description": "Resolve appeal on a subject",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Describe resolution."
          }
        }
      },
      "com.atproto.admin.defs.modEventComment": {
        "type": "object",
        "description": "Add a comment to a subject",
        "required": [
          "comment"
        ],
        "properties": {
          "comment": {
            "type": "string"
          },
          "sticky": {
            "type": "boolean",
            "description": "Make the comment persistent on the subject"
          }
        }
      },
      "com.atproto.admin.defs.modEventReport": {
        "type": "object",
        "description": "Report a subject",
        "required": [
          "reportType"
        ],
        "properties": {
          "comment": {
            "type": "string"
          },
          "reportType": {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonType"
          }
        }
      },
      "com.atproto.admin.defs.modEventLabel": {
        "type": "object",
        "description": "Apply/Negate labels on a subject",
        "required": [
          "createLabelVals",
          "negateLabelVals"
        ],
        "properties": {
          "comment": {
            "type": "string"
          },
          "createLabelVals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "negateLabelVals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "com.atproto.admin.defs.modEventAcknowledge": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          }
        }
      },
      "com.atproto.admin.defs.modEventEscalate": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          }
        }
      },
      "com.atproto.admin.defs.modEventMute": {
        "type": "object",
        "description": "Mute incoming reports on a subject",
        "required": [
          "durationInHours"
        ],
        "properties": {
          "comment": {
            "type": "string"
          },
          "durationInHours": {
            "type": "integer"
          }
        }
      },
      "com.atproto.admin.defs.modEventUnmute": {
        "type": "object",
        "description": "Unmute action on a subject",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Describe reasoning behind the reversal."
          }
        }
      },
      "com.atproto.admin.defs.modEventEmail": {
        "type": "object",
        "description": "Keep a log of outgoing email to a user",
        "required": [
          "subjectLine"
        ],
        "properties": {
          "subjectLine": {
            "type": "string",
            "description": "The subject line of the email sent to the user."
          },
          "comment": {
            "type": "string",
            "description": "Additional comment about the outgoing comm."
          }
        }
      },
      "com.atproto.admin.defs.communicationTemplateView": {
        "type": "object",
        "required": [
          "id",
          "name",
          "contentMarkdown",
          "disabled",
          "lastUpdatedBy",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Name of the template."
          },
          "subject": {
            "type": "string",
            "description": "Content of the template, can contain markdown and variable placeholders."
          },
          "contentMarkdown": {
            "type": "string",
            "description": "Subject of the message, used in emails."
          },
          "disabled": {
            "type": "boolean"
          },
          "lastUpdatedBy": {
            "type": "string",
            "description": "DID of the user who last updated the template.",
            "format": "did"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.label.defs.label": {
        "type": "object",
        "description": "Metadata tag on an atproto resource (eg, repo or record).",
        "required": [
          "src",
          "uri",
          "val",
          "cts"
        ],
        "properties": {
          "src": {
            "type": "string",
            "description": "DID of the actor who created this label.",
            "format": "did"
          },
          "uri": {
            "type": "string",
            "description": "AT URI of the record, repository (account), or other resource that this label applies to.",
            "format": "uri"
          },
          "cid": {
            "type": "string",
            "description": "Optionally, CID specifying the specific version of 'uri' resource this label applies to.",
            "format": "cid"
          },
          "val": {
            "type": "string",
            "description": "The short string name of the value or type of this label.",
            "maxLength": 128
          },
          "neg": {
            "type": "boolean",
            "description": "If true, this is a negation label, overwriting a previous label."
          },
          "cts": {
            "type": "string",
            "description": "Timestamp when this label was created.",
            "format": "date-time"
          }
        }
      },
      "com.atproto.label.defs.selfLabels": {
        "type": "object",
        "description": "Metadata tags on an atproto record, published by the author within the record.",
        "required": [
          "values"
        ],
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.selfLabel"
            },
            "maxItems": 10
          }
        }
      },
      "com.atproto.label.defs.selfLabel": {
        "type": "object",
        "description": "Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel.",
        "required": [
          "val"
        ],
        "properties": {
          "val": {
            "type": "string",
            "description": "The short string name of the value or type of this label.",
            "maxLength": 128
          }
        }
      },
      "com.atproto.label.subscribeLabels.labels": {
        "type": "object",
        "required": [
          "seq",
          "labels"
        ],
        "properties": {
          "seq": {
            "type": "integer"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.label.defs.label"
            }
          }
        }
      },
      "com.atproto.label.subscribeLabels.info": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "OutdatedCursor"
            ]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "com.atproto.moderation.defs.reasonType": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonSpam"
          },
          {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonViolation"
          },
          {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonMisleading"
          },
          {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonSexual"
          },
          {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonRude"
          },
          {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonOther"
          },
          {
            "$ref": "#/components/schemas/com.atproto.moderation.defs.reasonAppeal"
          }
        ]
      },
      "com.atproto.moderation.defs.reasonSpam": {
        "type": "string",
        "format": "token",
        "description": "Spam: frequent unwanted promotion, replies, mentions"
      },
      "com.atproto.moderation.defs.reasonViolation": {
        "type": "string",
        "format": "token",
        "description": "Direct violation of server rules, laws, terms of service"
      },
      "com.atproto.moderation.defs.reasonMisleading": {
        "type": "string",
        "format": "token",
        "description": "Misleading identity, affiliation, or content"
      },
      "com.atproto.moderation.defs.reasonSexual": {
        "type": "string",
        "format": "token",
        "description": "Unwanted or mislabeled sexual content"
      },
      "com.atproto.moderation.defs.reasonRude": {
        "type": "string",
        "format": "token",
        "description": "Rude, harassing, explicit, or otherwise unwelcoming behavior"
      },
      "com.atproto.moderation.defs.reasonOther": {
        "type": "string",
        "format": "token",
        "description": "Other: reports not falling under another report category"
      },
      "com.atproto.moderation.defs.reasonAppeal": {
        "type": "string",
        "format": "token",
        "description": "Appeal: appeal a previously taken moderation action"
      },
      "com.atproto.repo.applyWrites.create": {
        "type": "object",
        "description": "Create a new record.",
        "required": [
          "collection",
          "value"
        ],
        "properties": {
          "collection": {
            "type": "string",
            "format": "nsid"
          },
          "rkey": {
            "type": "string",
            "maxLength": 15
          },
          "value": {}
        }
      },
      "com.atproto.repo.applyWrites.update": {
        "type": "object",
        "description": "Update an existing record.",
        "required": [
          "collection",
          "rkey",
          "value"
        ],
        "properties": {
          "collection": {
            "type": "string",
            "format": "nsid"
          },
          "rkey": {
            "type": "string"
          },
          "value": {}
        }
      },
      "com.atproto.repo.applyWrites.delete": {
        "type": "object",
        "description": "Delete an existing record.",
        "required": [
          "collection",
          "rkey"
        ],
        "properties": {
          "collection": {
            "type": "string",
            "format": "nsid"
          },
          "rkey": {
            "type": "string"
          }
        }
      },
      "com.atproto.repo.listRecords.record": {
        "type": "object",
        "required": [
          "uri",
          "cid",
          "value"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          },
          "value": {}
        }
      },
      "com.atproto.repo.strongRef": {
        "type": "object",
        "required": [
          "uri",
          "cid"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "format": "at-uri"
          },
          "cid": {
            "type": "string",
            "format": "cid"
          }
        }
      },
      "com.atproto.server.createAppPassword.appPassword": {
        "type": "object",
        "required": [
          "name",
          "password",
          "createdAt"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.server.createInviteCodes.accountCodes": {
        "type": "object",
        "required": [
          "account",
          "codes"
        ],
        "properties": {
          "account": {
            "type": "string"
          },
          "codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "com.atproto.server.defs.inviteCode": {
        "type": "object",
        "required": [
          "code",
          "available",
          "disabled",
          "forAccount",
          "createdBy",
          "createdAt",
          "uses"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "available": {
            "type": "integer"
          },
          "disabled": {
            "type": "boolean"
          },
          "forAccount": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "uses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.server.defs.inviteCodeUse"
            }
          }
        }
      },
      "com.atproto.server.defs.inviteCodeUse": {
        "type": "object",
        "required": [
          "usedBy",
          "usedAt"
        ],
        "properties": {
          "usedBy": {
            "type": "string",
            "format": "did"
          },
          "usedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.server.describeServer.links": {
        "type": "object",
        "properties": {
          "privacyPolicy": {
            "type": "string"
          },
          "termsOfService": {
            "type": "string"
          }
        }
      },
      "com.atproto.server.listAppPasswords.appPassword": {
        "type": "object",
        "required": [
          "name",
          "createdAt"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.sync.listRepos.repo": {
        "type": "object",
        "required": [
          "did",
          "head",
          "rev"
        ],
        "properties": {
          "did": {
            "type": "string",
            "format": "did"
          },
          "head": {
            "type": "string",
            "format": "cid"
          },
          "rev": {
            "type": "string"
          }
        }
      },
      "com.atproto.sync.subscribeRepos.commit": {
        "type": "object",
        "required": [
          "seq",
          "rebase",
          "tooBig",
          "repo",
          "commit",
          "rev",
          "since",
          "blocks",
          "ops",
          "blobs",
          "time"
        ],
        "properties": {
          "seq": {
            "type": "integer"
          },
          "rebase": {
            "type": "boolean"
          },
          "tooBig": {
            "type": "boolean"
          },
          "repo": {
            "type": "string",
            "format": "did"
          },
          "commit": {
            "type": "string",
            "format": "cid-link"
          },
          "prev": {
            "type": "string",
            "format": "cid-link"
          },
          "rev": {
            "type": "string",
            "description": "The rev of the emitted commit."
          },
          "since": {
            "type": "string",
            "description": "The rev of the last emitted commit from this repo."
          },
          "blocks": {
            "type": "string",
            "format": "byte",
            "description": "CAR file containing relevant blocks.",
            "maxLength": 1000000
          },
          "ops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/com.atproto.sync.subscribeRepos.repoOp"
            },
            "maxItems": 200
          },
          "blobs": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "cid-link"
            }
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.sync.subscribeRepos.handle": {
        "type": "object",
        "required": [
          "seq",
          "did",
          "handle",
          "time"
        ],
        "properties": {
          "seq": {
            "type": "integer"
          },
          "did": {
            "type": "string",
            "format": "did"
          },
          "handle": {
            "type": "string",
            "format": "handle"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.sync.subscribeRepos.migrate": {
        "type": "object",
        "required": [
          "seq",
          "did",
          "migrateTo",
          "time"
        ],
        "properties": {
          "seq": {
            "type": "integer"
          },
          "did": {
            "type": "string",
            "format": "did"
          },
          "migrateTo": {
            "type": "string"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.sync.subscribeRepos.tombstone": {
        "type": "object",
        "required": [
          "seq",
          "did",
          "time"
        ],
        "properties": {
          "seq": {
            "type": "integer"
          },
          "did": {
            "type": "string",
            "format": "did"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "com.atproto.sync.subscribeRepos.info": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "OutdatedCursor"
            ]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "com.atproto.sync.subscribeRepos.repoOp": {
        "type": "object",
        "description": "A repo operation, ie a write of a single record. For creates and updates, CID is the record's CID as of this operation. For deletes, it's null.",
        "required": [
          "action",
          "path",
          "cid"
        ],
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "create",
              "update",
              "delete"
            ]
          },
          "path": {
            "type": "string"
          },
          "cid": {
            "type": "string",
            "format": "cid-link"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "app.bsky.actor"
    },
    {
      "name": "app.bsky.embed"
    },
    {
      "name": "app.bsky.feed"
    },
    {
      "name": "app.bsky.graph"
    },
    {
      "name": "app.bsky.notification"
    },
    {
      "name": "app.bsky.richtext"
    },
    {
      "name": "app.bsky.unspecced"
    },
    {
      "name": "com.atproto.admin"
    },
    {
      "name": "com.atproto.identity"
    },
    {
      "name": "com.atproto.label"
    },
    {
      "name": "com.atproto.moderation"
    },
    {
      "name": "com.atproto.repo"
    },
    {
      "name": "com.atproto.server"
    },
    {
      "name": "com.atproto.sync"
    },
    {
      "name": "com.atproto.temp"
    }
  ]
}
